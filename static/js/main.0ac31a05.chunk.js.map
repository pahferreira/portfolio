{"version":3,"sources":["utils/PrivateRoute.tsx","views/Home/styled.ts","storage/ducks/home.ts","hooks/useLanguage.tsx","views/Home/index.tsx","views/NotFound/styled.ts","storage/ducks/notFound.ts","views/NotFound/index.tsx","views/Skills/styled.ts","components/Container/index.tsx","components/Content/index.tsx","components/SectionTitle/index.tsx","components/FadeAnimation/index.tsx","storage/ducks/skills.ts","components/Title/index.tsx","components/Subtitle/index.tsx","components/Text/index.tsx","components/Note/index.tsx","views/Skills/Section.tsx","views/Skills/index.tsx","views/About/styled.ts","views/About/Desktop.tsx","views/About/Mobile.tsx","storage/ducks/about.ts","views/About/index.tsx","views/Projects/styled.ts","storage/ducks/projects.ts","views/Projects/TransitionWrapper.tsx","views/Projects/Project.tsx","components/Gallery/styled.ts","components/Gallery/index.tsx","enums/actions.ts","routes/paths.ts","views/Projects/index.tsx","storage/ducks/layout.ts","routes/index.tsx","storage/ducks/auth.ts","storage/ducks/index.ts","storage/saga/auth.ts","services/API.ts","services/Layout/index.ts","storage/saga/layout.ts","services/Home/index.ts","storage/saga/home.ts","services/About/index.ts","storage/saga/about.ts","services/Skills/index.ts","storage/saga/skills.ts","services/NotFound/index.ts","storage/saga/notFound.ts","services/Projects/parser.ts","services/Projects/index.ts","storage/saga/projects.ts","storage/saga/index.ts","storage/index.ts","utils/GlobalTheme.ts","utils/theme.ts","components/Header/styled.ts","components/Header/ResponsiveMenu.tsx","components/Header/Navbar.tsx","components/Header/index.tsx","components/Footer/styled.ts","components/Footer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PrivateRoute","exact","Component","component","path","localStorage","getItem","to","Container","styled","div","Cursor","span","theme","colors","secondary","keyframes","background","Title","p","fontFamilies","nunito","fontSizes","sectionTitle","title","Subtitle","lato","subtitle","text","Types","initialState","top_message","bottom_message","qualities","LanguageContext","createContext","LanguageProvider","children","useState","currentLanguage","setCurrentLanguage","Provider","value","useLanguage","context","useContext","Error","sleep","milliseconds","Promise","resolve","setTimeout","Home","activeWordIndex","setActiveWordIndex","wordToShow","setwordToShow","isTyping","setIsTyping","words","setWords","dispatch","useDispatch","home","useSelector","state","triggerEffect","setTriggerEffect","useEffect","type","payload","trigger","map","quality","typeAndErase","useCallback","a","word","i","prevState","length","slice","typing","BackLink","Link","message","url_label","NotFound","notFound","SectionsContainer","Block","Content","SectionTitle","lightPrimary","FadeAnimation","activateAnimation","CSSTransition","in","classNames","timeout","unmountOnExit","section_title","sections","margin","textTransform","Text","align","Note","small","IdeaAndPlanning","props","section","description","part","tools_title","tools","tool","index","key","note","Skills","triggerAnimation","setTriggerAnimation","skills","Section","AboutContent","primary","Image","image","MobileSection","MobileHeader","MobileImage","MobileLabelContainer","MobileAbountContent","Desktop","greeting","triggerSecondAnimation","setTriggerSecondAnimation","onEntered","picture","url","mobile_picture","About","matches","useMediaQuery","about","Mobile","ProjectsContainer","ProjectContainer","ProjectContent","ProjectImage","source","GalleryContainer","GalleryImage","GalleryVideo","Row","Label","Separator","ProjectWrapper","entered","tech_label","repo_label","live","gallery","projects","TransitionWrapper","first","onChange","isVisible","Projects","project","onClickGallery","handleGalleryClick","item","onlyUrl","itemIndex","indexOf","technologies","repository_link","href","target","live_link","provider_metadata","resource_type","onClick","size","color","cover_image","ENavigationActions","visible","overlay","Header","ImageElement","img","VideoElement","video","NavigatorWrapper","position","EGlobalActions","Gallery","activeIndex","setVisible","currentElement","setCurrentElement","setIndex","handleNavigation","action","BACK","style","cursor","controls","src","_renderElement","NEXT","paths","showGallery","setShowGallery","currentGallery","setCurrentGallery","galleryIndex","setGalleryIndex","handleGallery","currentIndex","Project","id","notExact","header","link","language","footer","contact_email","socials","RouterContainer","route","private","process","user","appReducer","combineReducers","auth","layout","loading","authSaga","api","axios","create","baseURL","getLayout","API","post","query","data","getLayoutContent","layoutSaga","put","call","response","all","takeLatest","getHomeContent","loadHomeContent","homeSaga","getAboutContent","loadAboutContent","aboutSaga","getSkillsContent","skill","loadSkillsContent","skillsSaga","getNotFoundContent","loadNotFoundContent","notFoundSaga","parseProjectsContent","projectsView","getProjectsContent","loadProjectsContent","projectsSaga","rootSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","RESET","undefined","applyMiddleware","run","StyledApp","createGlobalStyle","NavContainer","NavLink","active","MenuButton","IconButton","MenuOverlay","open","MenuContainer","MenuOption","LanguageSelector","select","LanguageSelectorContainer","LanguageOption","ResponsiveMenu","options","languages","setOpen","location","useLocation","handleClick","option","label","pathname","handleLanguageClick","Navbar","e","alignSelf","IconsContainer","Footer","social","_renderIcon","App","GlobalTheme","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0ac31a05.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\ninterface Props {\n  exact?: boolean\n  component: React.FunctionComponent\n  path: string\n}\n\nconst PrivateRoute = ({ exact, component: Component, path }: Props) => {\n  const token = localStorage.getItem('access_token')\n\n  const renderComponent = () => {\n    if (token) {\n      return (\n        <Route\n          exact={exact ? exact : false}\n          path={path}\n          component={Component}\n        />\n      )\n    }\n    return <Redirect to=\"/\" />\n  }\n\n  return renderComponent()\n}\n\nexport default PrivateRoute\n","import styled, { keyframes } from 'styled-components'\nimport { Theme } from 'utils/theme'\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  @media screen and (max-width: 360px) {\n    padding: 0 5px;\n  }\n`\n\nconst blink = ({ theme }: { theme: Theme }) => keyframes`\n  0% { background-color: ${theme.colors.secondary} }\n  49% { background-color: ${theme.colors.secondary} }\n  50% { background-color: ${theme.colors.background} }\n  99% { background-color: ${theme.colors.background} }\n  100% { background-color: ${theme.colors.secondary} }\n`\n\ntype CursorProps = {\n  typing?: boolean\n}\n\nexport const Cursor = styled.span<CursorProps>`\n  display: inline-block;\n  width: 3px;\n  height: 100%;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  margin-left: 5px;\n  animation: ${blink} 1s infinite;\n`\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.title};\n  }\n`\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n`\n","import { TState } from 'types/home'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'HOME/TRIGGER',\n  REQUEST: 'HOME/REQUEST',\n  SUCCESS: 'HOME/SUCCESS',\n  FULFILL: 'HOME/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  top_message: '',\n  bottom_message: '',\n  qualities: [],\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { useState, createContext, useContext, FC } from 'react'\n\ntype LanguageContextType = {\n  currentLanguage: string\n  setCurrentLanguage: (language: string) => void\n}\n\nconst LanguageContext: React.Context<LanguageContextType | null> = createContext<LanguageContextType | null>(\n  null\n)\n\ntype Props = {\n  children: Array<JSX.Element> | JSX.Element\n}\n\nconst LanguageProvider: FC<Props> = ({ children }: Props) => {\n  const [currentLanguage, setCurrentLanguage] = useState<string>('en')\n\n  return (\n    <LanguageContext.Provider value={{ currentLanguage, setCurrentLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  )\n}\n\nconst useLanguage = (): LanguageContextType => {\n  const context: LanguageContextType | null = useContext(LanguageContext)\n  if (!context) {\n    throw new Error('useLanguage must be used inside LanguageProvider')\n  } else {\n    return context\n  }\n}\n\nexport { useLanguage, LanguageProvider }\n","import React, { FC, useState, useEffect, useCallback } from 'react'\nimport { Container, Cursor, Title, Subtitle } from './styled'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as THomeState } from 'types/home'\nimport { trigger } from 'storage/ducks/home'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst TYPING_DELAY = 150\nconst ERASING_DELAY = 100\nconst START_TO_ERASE_DELAY = 1500\nconst NEXT_WORD = 1000\n\nconst sleep = (milliseconds: number) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds))\n}\n\nconst Home: FC = () => {\n  const { currentLanguage } = useLanguage()\n  const [activeWordIndex, setActiveWordIndex] = useState<number>(0)\n  const [wordToShow, setwordToShow] = useState<string>('')\n  const [isTyping, setIsTyping] = useState(false)\n  const [words, setWords] = useState<Array<string>>([])\n  const dispatch = useDispatch()\n  const home = useSelector<TStore, THomeState>((state) => state.home)\n  const [triggerEffect, setTriggerEffect] = useState(true)\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  useEffect(() => {\n    setWords(home.qualities.map((quality) => quality.value))\n  }, [home.qualities])\n\n  const typeAndErase = useCallback(\n    async (word: string = '') => {\n      // Typing\n      setTriggerEffect(false)\n      setIsTyping(true)\n      for (let i = 0; i < word.length; i++) {\n        await sleep(TYPING_DELAY)\n        setwordToShow((prevState) => prevState + word[i])\n      }\n      setIsTyping(false)\n      await sleep(START_TO_ERASE_DELAY)\n      setIsTyping(true)\n      // Erasing\n      for (let i = 0; i < word.length; i++) {\n        await sleep(ERASING_DELAY)\n        setwordToShow((prevState) => prevState.slice(0, prevState.length - 1))\n      }\n      // Next Word\n      setIsTyping(false)\n      await sleep(NEXT_WORD)\n      setActiveWordIndex((activeWordIndex + 1) % words.length)\n      setTriggerEffect(true)\n    },\n    [words, activeWordIndex]\n  )\n\n  useEffect(() => {\n    if (words.length > 0 && triggerEffect) {\n      typeAndErase(words[activeWordIndex])\n    }\n  }, [activeWordIndex, typeAndErase, words, triggerEffect])\n\n  return (\n    <Container>\n      <Subtitle>{home.top_message}</Subtitle>\n      <Title>\n        {wordToShow}\n        <Cursor typing={isTyping}>&nbsp;</Cursor>\n      </Title>\n      <Subtitle>{home.bottom_message}</Subtitle>\n    </Container>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.title};\n  }\n`\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.text};\n`\nexport const BackLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-top: 20px;\n  text-decoration: underline;\n`\n","import { TState } from 'types/notFound'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'NOT_FOUND/TRIGGER',\n  REQUEST: 'NOT_FOUND/REQUEST',\n  SUCCESS: 'NOT_FOUND/SUCCESS',\n  FULFILL: 'NOT_FOUND/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  title: '',\n  subtitle: '',\n  message: '',\n  url_label: '',\n}\n\n// Reducer\nexport default function (state: TState = initialState, action: TAction) {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { FC, useEffect } from 'react'\nimport { Container, Title, Subtitle, BackLink } from './styled'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLanguage } from 'hooks/useLanguage'\nimport { TStore } from 'types/storage'\nimport { TState as TNotFoundState } from 'types/notFound'\nimport { trigger } from 'storage/ducks/notFound'\n\nconst NotFound: FC = () => {\n  const dispatch = useDispatch()\n  const { currentLanguage } = useLanguage()\n  const { title, subtitle, message, url_label } = useSelector<\n    TStore,\n    TNotFoundState\n  >((state) => state.notFound)\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Subtitle>{subtitle}</Subtitle>\n      <Subtitle>{message}</Subtitle>\n      <BackLink to=\"/\">{url_label}</BackLink>\n    </Container>\n  )\n}\n\nexport default NotFound\n","import styled from 'styled-components'\n\nexport const SectionsContainer = styled.div`\n  min-height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n  }\n  @media screen and (min-width: 1600px) {\n    margin-top: 5%;\n  }\n`\n\nexport const Container = styled.div`\n  width: 33%;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  @media screen and (max-width: 960px) {\n    width: 100%;\n    align-self: center;\n  }\n  @media screen and (max-width: 475px) {\n    width: 100%;\n    align-self: flex-start;\n  }\n`\n\nexport const Block = styled.div`\nmin-height: 55px;\n`\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  @media screen and (max-width: 960px) {\n    padding: 8% 0 5% 0;\n  }\n  @media screen and (max-width: 768px) {\n    padding: 11% 0 5% 0;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst Content = styled.div`\n  min-height: 80vh;\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  @media screen and (max-width: 960px) {\n    min-height: 90vh;\n  }\n`\n\nexport default Content\n","import styled from 'styled-components'\n\nconst SectionTitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.lightPrimary};\n  text-transform: uppercase;\n  @media screen and (max-width: 400px) {\n    font-size: 3rem;\n  }\n`\n\nexport default SectionTitle\n","import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\ntype Props = {\n  children: JSX.Element | Array<JSX.Element>\n  activateAnimation: boolean\n}\n\nconst FadeAnimation = ({ children, activateAnimation }: Props) => (\n  <CSSTransition\n    in={activateAnimation}\n    classNames=\"fade\"\n    timeout={500}\n    unmountOnExit>\n    {children}\n  </CSSTransition>\n)\n\nexport default FadeAnimation\n","import { TAction } from 'types/storage'\nimport { TState } from 'types/skills'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'SKILLS/TRIGGER',\n  REQUEST: 'SKILLS/REQUEST',\n  SUCCESS: 'SKILLS/SUCCESS',\n  FULFILL: 'SKILLS/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  section_title: '',\n  sections: [],\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import styled from 'styled-components'\n\ntype TitleProps = {\n  textTransform?: string\n  margin?: string\n}\n\nconst Title = styled.p<TitleProps>`\n  margin: ${({ margin }) => (margin ? margin : '10px 0')};\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: ${({ textTransform }) =>\n    textTransform ? textTransform : 'none'};\n  text-align: center;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n    font-size: 2.5rem;\n    line-height: 3rem;\n  }\n  @media screen and (max-width: 400px) {\n    text-align: left;\n    font-size: 2rem;\n    line-height: 3rem;\n  }\n`\n\nexport default Title\n","import styled from 'styled-components'\n\nconst Subtitle = styled.p`\n  margin: 15px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Subtitle\n","import styled from 'styled-components'\n\ntype TextProps = {\n  align?: string\n}\n\nconst Text = styled.p<TextProps>`\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: ${({ align }) => (align ? align : 'center')};\n  margin: 2px 0;\n  letter-spacing: 1px;\n  @media screen and (max-width: 475px) {\n    overflow-wrap: anywhere;\n    text-align: left;\n  }\n`\n\nexport default Text\n","import styled from 'styled-components'\n\nconst Note = styled.p`\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n  margin: 0;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Note\n","import React, { FC } from 'react'\nimport { Container, Block } from './styled'\nimport Title from 'components/Title'\nimport Subtitle from 'components/Subtitle'\nimport Text from 'components/Text'\nimport Note from 'components/Note'\nimport { TSection, TTool } from 'types/skills'\n\ntype Props = {\n  section: TSection\n}\n\nconst IdeaAndPlanning: FC<Props> = (props: Props) => {\n  const { section } = props\n\n  return (\n    <Container>\n      <Title textTransform=\"uppercase\">{section.title}</Title>\n      <Block>\n        <Text>{section.description}</Text>\n      </Block>\n      <Subtitle>{section.part.title}</Subtitle>\n      <Block>\n        <Text>{section.part.description}</Text>\n      </Block>\n      <Subtitle>{section.tools_title}</Subtitle>\n      {section.tools.map((tool: TTool, index: number) => (\n        <>\n          <Text key={index}>{tool.value}</Text>\n          {tool.note && <Note>({tool?.note})</Note>}\n        </>\n      ))}\n    </Container>\n  )\n}\n\nexport default IdeaAndPlanning\n","import React, { FC, useState, useEffect } from 'react'\nimport { SectionsContainer } from './styled'\nimport Container from 'components/Container'\nimport Content from 'components/Content'\nimport SectionTitle from 'components/SectionTitle'\nimport FadeAnimation from 'components/FadeAnimation'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TSkillsState } from 'types/skills'\nimport { trigger } from 'storage/ducks/skills'\nimport Section from './Section'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst Skills: FC = () => {\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n  const dispatch = useDispatch()\n  const skills = useSelector<TStore, TSkillsState>((state) => state.skills)\n  const { currentLanguage } = useLanguage()\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  useEffect(() => {\n    if (skills.sections.length > 0) {\n      setTriggerAnimation(true)\n    }\n  }, [skills.sections])\n\n  return (\n    <Container>\n      <Content>\n        <SectionTitle>{skills.section_title}</SectionTitle>\n        <FadeAnimation activateAnimation={triggerAnimation}>\n          <SectionsContainer>\n            {skills.sections.map((section, index) => (\n              <Section section={section} key={index} />\n            ))}\n          </SectionsContainer>\n        </FadeAnimation>\n      </Content>\n    </Container>\n  )\n}\n\nexport default Skills\n","import styled from 'styled-components'\n\nexport const Section = styled.div`\n  height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  @media screen and (min-width: 1600px) {\n    margin-top: 5%;\n  }\n`\n\nexport const AboutContent = styled.div`\n  width: 55%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background-color: ${({ theme }) => theme.colors.primary};\n  height: 90%;\n  padding: 20px 30px;\n  position: absolute;\n  z-index: 1;\n  @media screen and (max-width: 1024px) {\n    width: 60%;\n  }\n  @media screen and (min-width: 1600px) {\n    padding: 40px;\n  }\n`\n\ntype ImageProps = {\n  image: string\n}\n\nexport const Image = styled.div<ImageProps>`\n  width: 52.5%;\n  height: 434px;\n  background-image: ${({ image }) => `url(${image})`};\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: relative;\n  left: 50%;\n  @media screen and (min-width: 1600px) {\n    height: 500px;\n  }\n`\n\nexport const MobileSection = styled.div`\n  height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (max-width: 475px) {\n    align-items: flex-start;\n  }\n`\n\nexport const MobileHeader = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (max-width: 475px) {\n    flex-direction: row;\n    width: 98%;\n    margin-top: 40px;\n  }\n`\n\nexport const MobileImage = styled.div<ImageProps>`\n  width: 200px;\n  height: 200px;\n  background-image: ${({ image }) => `url(${image})`};\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 300px;\n  border: 2px solid ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 22px;\n  @media screen and (max-width: 475px) {\n    width: 50%;\n    margin-right: 10%;\n  }\n  @media screen and (max-width: 430px) {\n    width: 150px;\n    height: 150px;\n    margin-right: 5%;\n  }\n  @media screen and (max-width: 400px) {\n    width: 130px;\n    height: 130px;\n  }\n`\n\nexport const MobileLabelContainer = styled.div`\n  width: 45%;\n`\n\nexport const MobileAbountContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 90%;\n  padding: 20px 30px;\n  @media screen and (max-width: 475px) {\n    padding: 20px 0;\n  }\n`\n","import React, { FC, useEffect, useState } from 'react'\nimport Text from 'components/Text'\nimport Title from 'components/Title'\nimport { Section, Image, AboutContent } from './styled'\nimport { CSSTransition } from 'react-transition-group'\n\ntype Props = {\n  greeting: string\n  description: string\n  title: string\n  image: string\n}\n\nconst Desktop: FC<Props> = (props: Props) => {\n  const { greeting, description, title, image } = props\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n  const [triggerSecondAnimation, setTriggerSecondAnimation] = useState(false)\n\n  useEffect(() => {\n    setTriggerAnimation(true)\n  }, [])\n\n  return (\n    <Section>\n      <CSSTransition\n        in={triggerSecondAnimation}\n        classNames=\"appear-box\"\n        timeout={1000}\n        unmountOnExit>\n        <AboutContent>\n          <Text>{greeting}</Text>\n          <Title>{title},</Title>\n          <Text align=\"left\">{description}</Text>\n        </AboutContent>\n      </CSSTransition>\n      <CSSTransition\n        in={triggerAnimation}\n        classNames=\"appear\"\n        timeout={500}\n        unmountOnExit\n        onEntered={() => setTriggerSecondAnimation(true)}>\n        <Image image={image} />\n      </CSSTransition>\n    </Section>\n  )\n}\n\nexport default Desktop\n","import React, { FC, useState, useEffect } from 'react'\nimport Text from 'components/Text'\nimport Title from 'components/Title'\nimport FadeAnimation from 'components/FadeAnimation'\nimport {\n  MobileSection,\n  MobileImage,\n  MobileHeader,\n  MobileAbountContent,\n  MobileLabelContainer,\n} from './styled'\n\ntype Props = {\n  greeting: string\n  description: string\n  title: string\n  image: string\n}\n\nconst Desktop: FC<Props> = (props: Props) => {\n  const { greeting, description, title, image } = props\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n\n  useEffect(() => {\n    setTriggerAnimation(true)\n  }, [])\n\n  return (\n    <FadeAnimation activateAnimation={triggerAnimation}>\n      <MobileSection>\n        <MobileHeader>\n          <MobileImage image={image} />\n          <MobileLabelContainer>\n            <Text>{greeting}</Text>\n            <Title>{title},</Title>\n          </MobileLabelContainer>\n        </MobileHeader>\n        <MobileAbountContent>\n          <Text>{description}</Text>\n        </MobileAbountContent>\n      </MobileSection>\n    </FadeAnimation>\n  )\n}\n\nexport default Desktop\n","import { TAction } from 'types/storage'\nimport { TState } from 'types/about'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'ABOUT/TRIGGER',\n  REQUEST: 'ABOUT/REQUEST',\n  SUCCESS: 'ABOUT/SUCCESS',\n  FULFILL: 'ABOUT/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  section_title: '',\n  title: '',\n  greeting: '',\n  description: '',\n  picture: {\n    url: '',\n  },\n  mobile_picture: {\n    url: ''\n  }\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { FC, useEffect } from 'react'\nimport Container from 'components/Container'\nimport Content from 'components/Content'\nimport SectionTitle from 'components/SectionTitle'\nimport { useMediaQuery } from '@material-ui/core'\nimport Desktop from './Desktop'\nimport Mobile from './Mobile'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TState as TAboutState } from 'types/about'\nimport { TStore } from 'types/storage'\nimport { trigger } from 'storage/ducks/about'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst About: FC = () => {\n  const matches = useMediaQuery('(max-width: 960px)')\n  const dispatch = useDispatch()\n  const about = useSelector<TStore, TAboutState>((state) => state.about)\n  const { currentLanguage } = useLanguage()\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  return (\n    <Container>\n      <Content>\n        <SectionTitle>{about.section_title}</SectionTitle>\n        {matches ? (\n          <Mobile\n            greeting={about.greeting}\n            title={about.title}\n            description={about.description}\n            image={about.mobile_picture.url}\n          />\n        ) : (\n          <Desktop\n            greeting={about.greeting}\n            title={about.title}\n            description={about.description}\n            image={about.picture.url}\n          />\n        )}\n      </Content>\n    </Container>\n  )\n}\n\nexport default About\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  padding: 10vh 0 4%;\n  @media screen and (max-width: 960px) {\n    padding: 8% 0 5% 0;\n  }\n  @media screen and (max-width: 768px) {\n    padding: 11% 0 5% 0;\n  }\n`\n\nexport const Content = styled.div`\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  @media screen and (max-width: 960px) {\n    min-height: 90vh;\n  }\n`\n\nexport const ProjectsContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const ProjectContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 20px;\n  @media screen and (max-width: 750px) {\n    flex-direction: column-reverse;\n  }\n`\n\nexport const ProjectContent = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  width: 55%;\n  @media screen and (max-width: 750px) {\n    width: 100%;\n  }\n`\n\ntype ImageProps = {\n  source: string\n}\n\nexport const ProjectImage = styled.div<ImageProps>`\n  width: 40%;\n  background-image: url(${({ source }) => source});\n  height: 100%;\n  height: 360px;\n  background-size: cover;\n  background-position-x: center;\n  background-position-y: center;\n  background-repeat: no-repeat;\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  @media screen and (max-width: 750px) {\n    width: 100%;\n    height: 300px;\n    margin-bottom: 15px;\n  }\n  @media screen and (max-width: 570px) {\n    height: 200px;\n  }\n  @media screen and (max-width: 400px) {\n    height: 150px;\n  }\n`\n\nexport const GalleryContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`\n\nexport const GalleryImage = styled.div<ImageProps>`\n  cursor: pointer;\n  width: 60px;\n  height: 60px;\n  background-image: url(${({ source }) => source});\n  background-size: cover;\n  background-position-x: center;\n  background-position-y: center;\n  background-repeat: no-repeat;\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  margin-right: 5%;\n  @media screen and (max-width: 750px) {\n    margin: 0 10px 10px 0;\n  }\n`\n\nexport const GalleryVideo = styled.div`\n  cursor: pointer;\n  width: 60px;\n  height: 60px;\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  margin-right: 5%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 750px) {\n    margin: 0 10px 10px 0;\n  }\n`\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: 6px 0 0;\n`\n\nexport const Label = styled.span`\n  text-transform: uppercase;\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-right: 10px;\n`\nexport const Link = styled.a`\n  text-decoration: underline;\n`\nexport const Separator = styled.div`\n  height: 10px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.lightPrimary};\n  margin-top: 40px;\n`\n\ntype ProjectWrapperProps = {\n  entered?: boolean\n}\nexport const ProjectWrapper = styled.div<ProjectWrapperProps>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  opacity: ${({ entered }) => (entered ? 1 : 0)};\n  transition: opacity 300ms;\n  padding-top: 100px;\n`\n","import { TState } from 'types/projects'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'PROJECTS/TRIGGER',\n  REQUEST: 'PROJECTS/REQUEST',\n  SUCCESS: 'PROJECTS/SUCCESS',\n  FULFILL: 'PROJECTS/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  section_title: '',\n  tech_label: '',\n  repo_label: '',\n  live: '',\n  gallery: '',\n  projects: [],\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction) => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { FC, useState, useEffect } from 'react'\nimport VisibilitySensor from 'react-visibility-sensor'\nimport { ProjectWrapper } from './styled'\n\ntype Props = {\n  children: JSX.Element | Array<JSX.Element>\n  first?: boolean\n}\n\nconst TransitionWrapper: FC<Props> = ({ children, first }: Props) => {\n  const [triggerAnimation, setTriggerAnimation] = useState<boolean>(false)\n\n  const handleEntering = (isVisible: boolean) => {\n    if (isVisible && !first) {\n      setTriggerAnimation(isVisible)\n    }\n  }\n\n  useEffect(() => {\n    if (first) {\n      setTriggerAnimation(true)\n    }\n  }, [first])\n\n  return (\n    <VisibilitySensor onChange={handleEntering}>\n      <ProjectWrapper entered={triggerAnimation}>{children}</ProjectWrapper>\n    </VisibilitySensor>\n  )\n}\n\nexport default TransitionWrapper\n","import React, { FC } from 'react'\nimport {\n  ProjectContainer,\n  ProjectContent,\n  ProjectImage,\n  Row,\n  Label,\n  Link,\n  GalleryContainer,\n  GalleryImage,\n  Separator,\n  GalleryVideo,\n} from './styled'\nimport { TProject, TImage } from 'types/projects'\nimport Title from 'components/Title'\nimport Subtitle from 'components/Subtitle'\nimport Text from 'components/Text'\nimport { useSelector } from 'react-redux'\nimport { TState as TProjectsState } from 'types/projects'\nimport { TStore } from 'types/storage'\nimport TransitionWrapper from './TransitionWrapper'\nimport { AiOutlinePlayCircle } from 'react-icons/ai'\n\ntype Props = {\n  project: TProject\n  first: boolean\n  onClickGallery: (\n    gallery: Array<TImage> | undefined,\n    currentIndex: number | undefined\n  ) => void\n}\n\nconst Projects: FC<Props> = (props: Props) => {\n  const { project, first, onClickGallery } = props\n  const { tech_label, repo_label, live, gallery } = useSelector<\n    TStore,\n    TProjectsState\n  >((state) => state.projects)\n\n  const handleGalleryClick = (item: TImage) => {\n    const onlyUrl = project?.gallery?.map((image: TImage) => image.url)\n    const itemIndex = onlyUrl?.indexOf(item.url)\n    onClickGallery(project?.gallery, itemIndex)\n  }\n\n  const _renderGalleryItem = (item: TImage) => {\n    if (item.provider_metadata.resource_type === 'image') {\n      return (\n        <GalleryImage\n          key={item.url}\n          source={item.url}\n          onClick={() => handleGalleryClick(item)}\n        />\n      )\n    }\n    return (\n      <GalleryVideo key={item.url} onClick={() => handleGalleryClick(item)}>\n        <AiOutlinePlayCircle size={35} color=\"#E4E4A8\" />\n      </GalleryVideo>\n    )\n  }\n\n  return (\n    <TransitionWrapper first={first}>\n      <ProjectContainer>\n        <ProjectContent>\n          <Title margin=\"0 0 10px\">{project.title}</Title>\n          <Text align=\"left\">{project.description}</Text>\n          <Row>\n            <Text align=\"left\">\n              <Label>{tech_label}:</Label>\n              {project.technologies}\n            </Text>\n          </Row>\n          {project?.repository_link && (\n            <Row>\n              <Text align=\"left\">\n                <Label>{repo_label}:</Label>\n                <Link href={project?.repository_link} target=\"blank\">\n                  {project?.repository_link}\n                </Link>\n              </Text>\n            </Row>\n          )}\n          {project?.live_link && (\n            <Row>\n              <Text align=\"left\">\n                <Label>{live}:</Label>\n                <Link href={project?.live_link} target=\"blank\">\n                  {project?.live_link}\n                </Link>\n              </Text>\n            </Row>\n          )}\n          {project?.gallery && project?.gallery.length > 0 && (\n            <>\n              <Subtitle>{gallery}:</Subtitle>\n              <GalleryContainer>\n                {project?.gallery?.map((image: TImage) =>\n                  _renderGalleryItem(image)\n                )}\n              </GalleryContainer>\n            </>\n          )}\n        </ProjectContent>\n        <ProjectImage source={project.cover_image.url} />\n      </ProjectContainer>\n      <Separator />\n    </TransitionWrapper>\n  )\n}\n\nexport default Projects\n","import styled from 'styled-components'\n\ntype ContainerProps = {\n  visible: boolean\n}\nexport const Container = styled.div<ContainerProps>`\n  display: ${({ visible }) => (visible ? 'block' : 'none')};\n  position: fixed;\n  width: 100%;\n  height: 100vh;\n  z-index: 5;\n  opacity: ${({ visible }) => (visible ? 1 : 0)};\n  transition: all 1000ms easy-in-out;\n  background-color: ${({ theme }) => theme.colors.overlay};\n  left: 0;\n  top: 0;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  height: 10%;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  padding-right: 20px;\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  padding: 4%;\n  height: 80%;\n  width: 100%;\n  z-index: 1;\n  @media screen and (max-width: 575px) {\n    padding: 0;\n  }\n`\n\nexport const ImageElement = styled.img`\n  width: auto;\n  height: 100%;\n`\n\nexport const VideoElement = styled.video`\n  width: 50%;\n  height: 100%;\n  @media screen and (max-width: 790px) {\n    width: 100%;\n    height: 90%;\n  }\n`\n\ntype NavigatorWrapperProps = {\n  position?: 'left' | 'right'\n}\nexport const NavigatorWrapper = styled.div<NavigatorWrapperProps>`\n  @media screen and (max-width: 790px) {\n    position: absolute;\n    bottom: 5%;\n    left: ${({ position }) => position === 'left' && '5%'};\n    right: ${({ position }) => position === 'right' && '5%'};\n  }\n`\n","import React, { FC, useState, useEffect } from 'react'\nimport { TImage } from 'types/projects'\nimport {\n  Container,\n  Content,\n  ImageElement,\n  VideoElement,\n  Header,\n  NavigatorWrapper,\n} from './styled'\nimport { AiOutlineLeft, AiOutlineRight, AiOutlineClose } from 'react-icons/ai'\n\ntype Props = {\n  visible: boolean\n  gallery: Array<TImage>\n  activeIndex: number\n  setVisible: (status: boolean) => void\n}\n\nenum ENavigationActions {\n  BACK = 'back',\n  NEXT = 'next',\n}\n\nconst Gallery: FC<Props> = (props: Props) => {\n  const { visible, gallery, activeIndex, setVisible } = props\n  const [currentElement, setCurrentElement] = useState<TImage | null>(null)\n  const [index, setIndex] = useState(0)\n\n  useEffect(() => {\n    setIndex(activeIndex)\n  }, [activeIndex])\n\n  useEffect(() => {\n    setCurrentElement(gallery[0])\n  }, [gallery])\n\n  useEffect(() => {\n    setCurrentElement(gallery[activeIndex])\n  }, [activeIndex, gallery])\n\n  useEffect(() => {\n    setCurrentElement(gallery[index])\n  }, [index, gallery])\n\n  const _renderElement = () => {\n    if (currentElement?.provider_metadata?.resource_type === 'video') {\n      return (\n        <VideoElement controls>\n          <source src={currentElement?.url} type=\"video/mp4\" />\n        </VideoElement>\n      )\n    }\n    return <ImageElement src={currentElement?.url} />\n  }\n\n  const handleClose = () => {\n    setVisible(false)\n  }\n\n  const handleNavigation = (action: ENavigationActions) => {\n    if (action === ENavigationActions.BACK) {\n      if (index === 0) {\n        setIndex(gallery.length - 1)\n      } else {\n        setIndex(index - 1)\n      }\n    } else {\n      setIndex((index + 1) % gallery.length)\n    }\n  }\n\n  return (\n    <Container visible={visible}>\n      <Header>\n        <AiOutlineClose\n          size={35}\n          color=\"#E4E4A8\"\n          style={{ cursor: 'pointer' }}\n          onClick={handleClose}\n        />\n      </Header>\n      <Content>\n        <NavigatorWrapper position=\"left\">\n          <AiOutlineLeft\n            size={40}\n            color=\"#E4E4A8\"\n            style={{ cursor: 'pointer' }}\n            onClick={() => handleNavigation(ENavigationActions.BACK)}\n          />\n        </NavigatorWrapper>\n        {_renderElement()}\n        <NavigatorWrapper position=\"right\">\n          <AiOutlineRight\n            size={40}\n            color=\"#E4E4A8\"\n            style={{ cursor: 'pointer' }}\n            onClick={() => handleNavigation(ENavigationActions.NEXT)}\n          />\n        </NavigatorWrapper>\n      </Content>\n    </Container>\n  )\n}\n\nexport default Gallery\n","export enum EGlobalActions {\n  RESET = 'GLOBAL/RESET'\n}\n","import Home from 'views/Home'\nimport NotFound from 'views/NotFound'\nimport Skills from 'views/Skills'\nimport About from 'views/About'\nimport Projects from 'views/Projects'\n\nconst paths = [\n  {\n    path: '/',\n    component: Home,\n  },\n  {\n    path: '/skills',\n    component: Skills,\n  },\n  {\n    path: '/about',\n    component: About,\n  },\n  {\n    path: '/projects',\n    component: Projects,\n  },\n  {\n    path: '*',\n    component: NotFound,\n    notExact: true,\n  },\n]\n\nexport default paths\n","import React, { useEffect, FC, useState } from 'react'\nimport { ProjectsContainer, Content, Container } from './styled'\nimport SectionTitle from 'components/SectionTitle'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TState as TProjectsState, TProject, TImage } from 'types/projects'\nimport { TStore } from 'types/storage'\nimport { trigger } from 'storage/ducks/projects'\nimport { useLanguage } from 'hooks/useLanguage'\nimport Project from './Project'\nimport Gallery from 'components/Gallery'\nimport { useMediaQuery } from '@material-ui/core'\n\nconst Projects: FC = () => {\n  const matches = useMediaQuery('(max-width: 900px)')\n  const { currentLanguage } = useLanguage()\n  const dispatch = useDispatch()\n  const [showGallery, setShowGallery] = useState(false)\n  const [currentGallery, setCurrentGallery] = useState<Array<TImage>>([])\n  const [galleryIndex, setGalleryIndex] = useState<number>(0)\n  const { section_title, projects } = useSelector<TStore, TProjectsState>(\n    (state) => state.projects\n  )\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  const handleGallery = (\n    gallery: Array<TImage> | undefined,\n    currentIndex: number = 0\n  ) => {\n    if (gallery) {\n      setCurrentGallery(gallery)\n      setGalleryIndex(currentIndex)\n      setShowGallery(true)\n    }\n  }\n\n  return (\n    <Container>\n      <Gallery\n        visible={showGallery}\n        gallery={currentGallery}\n        activeIndex={galleryIndex}\n        setVisible={setShowGallery}\n      />\n      <Content>\n        <SectionTitle>{section_title}</SectionTitle>\n        <ProjectsContainer>\n          {projects.map((project: TProject, index: number) => (\n            <Project\n              project={project}\n              key={project.id}\n              first={index === 0 || matches}\n              onClickGallery={handleGallery}\n            />\n          ))}\n        </ProjectsContainer>\n      </Content>\n    </Container>\n  )\n}\n\nexport default Projects\n","import { TState } from 'types/layout'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'LAYOUT/TRIGGER',\n  REQUEST: 'LAYOUT/REQUEST',\n  SUCCESS: 'LAYOUT/SUCCESS',\n  FULFILL: 'LAYOUT/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  header: {\n    link: [],\n    language: [],\n  },\n  footer: {\n    contact_email: '',\n    socials: [],\n  },\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { FC, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport PrivateRoute from 'utils/PrivateRoute'\nimport paths from './paths'\nimport TRoute from 'types/router'\nimport { trigger } from 'storage/ducks/layout'\nimport { useDispatch } from 'react-redux'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst RouterContainer: FC = () => {\n  const dispatch = useDispatch()\n  const { currentLanguage } = useLanguage()\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  return (\n    <Switch>\n      {paths.map((route: TRoute) => {\n        if (route.private) {\n          return (\n            <PrivateRoute\n              exact={route?.notExact ? false : true}\n              component={route.component}\n              path={process.env.PUBLIC_URL + route.path}\n            />\n          )\n        }\n        return (\n          <Route\n            exact={route?.notExact ? false : true}\n            path={process.env.PUBLIC_URL + route.path}\n            component={route.component}\n            key={route.path}\n          />\n        )\n      })}\n    </Switch>\n  )\n}\n\nexport default RouterContainer\n","import { TState } from 'types/auth'\nimport { TAction } from 'types/storage'\n\n// ACTION TYPES\nexport const Types = {}\n\n// INITIAL STATE\nconst initialState: TState = {\n  user: {},\n}\n\n// REDUCER\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TAction, TStore } from 'types/storage'\nimport { EGlobalActions } from 'enums/actions'\n// Reducers\nimport auth from './auth'\nimport layout from './layout'\nimport home from './home'\nimport about from './about'\nimport skills from './skills'\nimport notFound from './notFound'\nimport projects from './projects'\n\nconst appReducer = combineReducers<TStore | undefined, TAction>({\n  auth,\n  layout,\n  home,\n  about,\n  skills,\n  notFound,\n  projects,\n})\n\nexport default (state: TStore, action: TAction) => {\n  if (action.type === EGlobalActions.RESET) {\n    return appReducer(undefined, action)\n  }\n  return appReducer(state, action)\n}\n","export default function* authSaga() {}\n","import axios, { AxiosInstance } from 'axios'\n\nconst api: AxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_MAIN_URL,\n  timeout: 5000,\n})\n\nexport default api\n","import API from 'services/API'\nimport { TState as TLayoutState } from 'types/layout'\n\nexport const getLayout = async (\n  currentLanguage: string\n): Promise<TLayoutState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n      query {\n        layout {\n          header {\n            link {\n              url\n              label: label_${currentLanguage}\n            }\n            language {\n              value\n              label: label_${currentLanguage}\n            }\n          }\n          footer {\n            contact_email\n            socials {\n              url\n              label\n            }\n          }\n        }\n      }\n      `,\n    })\n    return data.data.layout\n  } catch (error) {\n    return\n  }\n}\n","import { all, takeLatest, put, call } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from 'storage/ducks/layout'\nimport { getLayout } from 'services/Layout'\nimport { TAction } from 'types/storage'\n\nfunction* getLayoutContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const response = yield call(getLayout, currentLanguage)\n    if (response) {\n      yield put(success(response))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* layoutSaga() {\n  yield all([takeLatest(Types.TRIGGER, getLayoutContent)])\n}\n","import API from 'services/API'\nimport { TState as THomeState } from 'types/home'\n\nexport const getHomeContent = async (\n  currentLanguage: string\n): Promise<THomeState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          home {\n            top_message: top_message_${currentLanguage}\n            bottom_message: bottom_message_${currentLanguage}\n            qualities {\n              value: value_${currentLanguage}\n            }\n          }\n        }\n      `,\n    })\n    return data.data.home\n  } catch (error) {\n    return\n  }\n}\n","import { all, call, takeLatest, put } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from '../ducks/home'\nimport { getHomeContent } from 'services/Home'\nimport { TAction } from 'types/storage'\n\nfunction* loadHomeContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getHomeContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* homeSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadHomeContent)])\n}\n","import API from 'services/API'\nimport { TState as TAboutState } from 'types/about'\n\nexport const getAboutContent = async (\n  currentLanguage: string\n): Promise<TAboutState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          about {\n            section_title: section_title_${currentLanguage}\n            title\n            description: description_${currentLanguage}\n            greeting: greeting_${currentLanguage}\n            picture {\n              url\n            }\n            mobile_picture {\n              url\n            }\n          }\n        }\n      `,\n    })\n    return data.data.about\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, put, takeLatest } from 'redux-saga/effects'\nimport { Types, request, success, fulfill } from '../ducks/about'\nimport { getAboutContent } from 'services/About'\nimport { TAction } from 'types/storage'\n\nfunction* loadAboutContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getAboutContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* aboutSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadAboutContent)])\n}\n","import API from 'services/API'\nimport { TState as TSkillsState } from 'types/skills'\n\nexport const getSkillsContent = async (\n  currentLanguage: string\n): Promise<TSkillsState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          skill {\n            section_title: section_title_${currentLanguage}\n            sections {\n              title: title_${currentLanguage}\n              description: description_${currentLanguage}\n              tools_title: tools_title_${currentLanguage}\n              tools {\n                value: value_${currentLanguage}\n                note: note_${currentLanguage}\n              }\n              part{\n                title: title_${currentLanguage}\n                description: description_${currentLanguage}\n              }\n            }\n          }\n        }\n      `,\n    })\n    return data.data.skill\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, takeLatest, put } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from '../ducks/skills'\nimport { getSkillsContent } from 'services/Skills'\nimport { TAction } from 'types/storage'\n\nfunction* loadSkillsContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getSkillsContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* skillsSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadSkillsContent)])\n}\n","import API from 'services/API'\nimport { TState as TNotFoundState } from 'types/notFound'\n\nexport const getNotFoundContent = async (\n  currentLanguage: string\n): Promise<TNotFoundState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          notFound {\n            title: title_${currentLanguage}\n            subtitle: subtitle_${currentLanguage}\n            message: message_${currentLanguage}\n            url_label: url_label_${currentLanguage}\n          }\n        }\n      `,\n    })\n    return data.data.notFound\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, put, takeLatest } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from 'storage/ducks/notFound'\nimport { TAction } from 'types/storage'\nimport { getNotFoundContent } from 'services/NotFound'\n\nfunction* loadNotFoundContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getNotFoundContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* notFoundSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadNotFoundContent)])\n}\n","import { TState as TProjectsState, TProjectsResponse } from 'types/projects'\n\nexport const parseProjectsContent = ({\n  projects,\n  projectsView,\n}: TProjectsResponse): TProjectsState => {\n  const { section_title, tech_label, repo_label, live, gallery } = projectsView\n  return {\n    projects,\n    section_title,\n    tech_label,\n    repo_label,\n    live,\n    gallery,\n  }\n}\n","import API from 'services/API'\nimport { TState as TProjectsState } from 'types/projects'\nimport { parseProjectsContent } from './parser'\n\nexport const getProjectsContent = async (\n  currentLanguage: string\n): Promise<TProjectsState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          projectsView {\n            section_title: section_title_${currentLanguage}\n            tech_label: tech_label_${currentLanguage}\n            repo_label: repo_label_${currentLanguage}\n            live\n            gallery: gallery_${currentLanguage}\n          }\n          projects(where:{\n            visible: true\n          }) {\n            id\n            title\n            description: description_${currentLanguage}\n            live_link\n            repository_link\n            technologies\n            cover_image{\n              url\n            }\n            gallery {\n              url\n              provider_metadata\n            }\n          }\n        }\n      `,\n    })\n    return parseProjectsContent(data.data)\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, put, takeLatest } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from 'storage/ducks/projects'\nimport { getProjectsContent } from 'services/Projects'\nimport { TAction } from 'types/storage'\n\nfunction* loadProjectsContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getProjectsContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* projectsSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadProjectsContent)])\n}\n","import { all, fork } from 'redux-saga/effects'\n\n// Sagas\nimport authSaga from './auth'\nimport layoutSaga from './layout'\nimport homeSaga from './home'\nimport aboutSaga from './about'\nimport skillsSaga from './skills'\nimport notFoundSaga from './notFound'\nimport projectsSaga from './projects'\n\nexport default function* rootSaga() {\n  yield all([\n    fork(authSaga),\n    fork(layoutSaga),\n    fork(homeSaga),\n    fork(aboutSaga),\n    fork(skillsSaga),\n    fork(notFoundSaga),\n    fork(projectsSaga),\n  ])\n}\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport createSagaMiddleware, { SagaMiddleware } from 'redux-saga'\nimport ReduxDucks from './ducks'\nimport rootSaga from './saga'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\n  }\n}\n\nconst sagaMiddleware: SagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers: typeof compose =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore<any, any, any, any>(\n  ReduxDucks,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import { createGlobalStyle } from 'styled-components'\nimport { Theme } from './theme'\n\nconst StyledApp = createGlobalStyle<{ theme: Theme }>`\nbody {\n  margin: 0;\n  background-color: ${({ theme }) => theme.colors.background};\n  min-height: 100vh;\n  font-family: Nunito, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  display: flex;\n  justify-content: center;\n}\n  #root {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    box-sizing: border-box;\n    max-width: 1920px;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  *{\n    box-sizing: border-box;\n  }\n`\nexport default StyledApp\n","const theme = {\n  colors: {\n    background: '#24213E',\n    text: '#D4D4D4',\n    primary: '#5E548E',\n    secondary: '#E4E4A8',\n    lightPrimary: '#322F4D',\n    overlay: 'rgba(17, 17, 17, 0.6)',\n  },\n  fontSizes: {\n    sectionTitle: '4.0rem',\n    title: '2rem',\n    subtitle: '1.2rem',\n    text: '0.9rem',\n    small: '12px',\n  },\n  fontFamilies: {\n    nunito: 'Nunito Sans',\n    lato: 'Lato',\n  },\n}\n\nexport type Theme = typeof theme\nexport default theme\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { IconButton } from '@material-ui/core'\n\nexport const Container = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 20px;\n  height: 10vh;\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1920px;\n`\ntype ButtonProps = {\n  active: string\n}\n\nexport const NavContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 30%;\n  min-width: 400px;\n`\n\nexport const NavLink = styled(Link)<ButtonProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 0px 20px;\n`\n\nexport const MenuButton = styled(IconButton)`\n  color: ${({ theme }) => theme.colors.secondary} !important;\n  position: absolute !important;\n  top: 10px;\n  right: 10px;\n  z-index: 3;\n`\n\ntype MenuContainerProps = {\n  open: boolean\n}\n\nexport const MenuOverlay = styled.div<MenuContainerProps>`\n  width: 100%;\n  z-index: ${({ open }) => (open ? 1 : -1)};\n  height: 107vh;\n  position: absolute !important;\n  background-color: ${({ theme }) => theme.colors.overlay};\n  opacity: ${({ open }) => (open ? 1 : 0)};\n  transition: all 0.5s ease-in-out;\n`\n\nexport const MenuContainer = styled.div<MenuContainerProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 50vh;\n  width: 85%;\n  z-index: 2;\n  background-color: ${({ theme }) => theme.colors.lightPrimary};\n  clip-path: circle(\n    ${({ open }) => (open ? '200% at 90% -10%' : '0 at 90% -10%')}\n  );\n  -webkit-clip-path: circle(\n    ${({ open }) => (open ? '200% at 90% -10%' : '0 at 90% -10%')}\n  );\n  transition: all 0.5s ease-in-out;\n`\nexport const MenuOption = styled(Link)<ButtonProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 10px;\n`\n\nexport const LanguageSelector = styled.select`\n  margin-left: 10px;\n  padding: 1px 5px;\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  option {\n    color: ${({ theme }) => theme.colors.primary};\n    background: transparent;\n    min-height: 20px;\n    padding: 0px 2px 1px;\n    border: none;\n    outline: 0px;\n  }\n`\n\nexport const LanguageSelectorContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const Separator = styled.div`\n  height: 1px;\n  width: 180px;\n  margin: 20px 0;\n  background-color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport const LanguageOption = styled.div<ButtonProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 10px;\n`\n","import React, { FC, useState } from 'react'\nimport {\n  MenuButton,\n  MenuContainer,\n  MenuOption,\n  Separator,\n  LanguageOption,\n  MenuOverlay,\n} from './styled'\nimport { AiOutlineMenu } from 'react-icons/ai'\nimport { useLocation } from 'react-router-dom'\nimport { TLanguage, TLink } from 'types/layout'\n\ntype Props = {\n  options: Array<TLink>\n  languages: Array<TLanguage>\n  currentLanguage: string\n  setCurrentLanguage: (language: string) => void\n}\n\nconst ResponsiveMenu: FC<Props> = (props: Props) => {\n  const { options, languages, currentLanguage, setCurrentLanguage } = props\n  const [open, setOpen] = useState<boolean>(false)\n  const location = useLocation()\n\n  const handleClick = () => setOpen(false)\n\n  const handleLanguageClick = (language: string) => setCurrentLanguage(language)\n\n  return (\n    <>\n      <MenuButton onClick={() => setOpen((prevState: boolean) => !prevState)}>\n        <AiOutlineMenu size={24} />\n      </MenuButton>\n      <MenuOverlay open={open} onClick={handleClick} />\n      <MenuContainer open={open}>\n        {options.map((option: TLink) => (\n          <MenuOption\n            onClick={handleClick}\n            key={option.label}\n            to={process.env.PUBLIC_URL + option.url}\n            active={\n              location.pathname === process.env.PUBLIC_URL + option.url\n                ? 'true'\n                : 'false'\n            }>\n            {option.label}\n          </MenuOption>\n        ))}\n        <Separator />\n        {languages.map((language: TLanguage) => (\n          <LanguageOption\n            key={language.value}\n            active={currentLanguage === language.value ? 'true' : 'false'}\n            onClick={() => handleLanguageClick(language.value)}>\n            {language.label}\n          </LanguageOption>\n        ))}\n      </MenuContainer>\n    </>\n  )\n}\n\nexport default ResponsiveMenu\n","import React, { FC } from 'react'\nimport {\n  Container,\n  NavLink,\n  NavContainer,\n  LanguageSelectorContainer,\n  LanguageSelector,\n} from './styled'\nimport { useLocation } from 'react-router-dom'\nimport { TLanguage, TLink } from 'types/layout'\nimport { MdLanguage } from 'react-icons/md'\nimport { useLanguage } from 'hooks/useLanguage'\n\ntype Props = {\n  options: Array<TLink>\n  languages: Array<TLanguage>\n}\n\nconst Navbar: FC<Props> = (props: Props) => {\n  const { options, languages } = props\n  const location = useLocation()\n  const { currentLanguage, setCurrentLanguage } = useLanguage()\n\n  const handleLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>) =>\n    setCurrentLanguage(e.target.value)\n\n  return (\n    <Container>\n      <NavContainer>\n        {options.map((option: TLink) => (\n          <NavLink\n            key={option.label}\n            to={process.env.PUBLIC_URL + option.url}\n            active={\n              location.pathname === process.env.PUBLIC_URL + option.url\n                ? 'true'\n                : 'false'\n            }>\n            {option.label}\n          </NavLink>\n        ))}\n      </NavContainer>\n      <LanguageSelectorContainer>\n        <MdLanguage size={18} color=\"#5E548E\" />\n        <LanguageSelector\n          value={currentLanguage}\n          onChange={handleLanguageChange}>\n          {languages.map((language) => (\n            <option key={language.value} value={language.value}>\n              {language.label}\n            </option>\n          ))}\n        </LanguageSelector>\n      </LanguageSelectorContainer>\n    </Container>\n  )\n}\n\nexport default Navbar\n","import React, { FC } from 'react'\nimport { useMediaQuery } from '@material-ui/core'\nimport ResponsiveMenu from './ResponsiveMenu'\nimport Navbar from './Navbar'\nimport { useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TLayoutState } from 'types/layout'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst Header: FC = () => {\n  const { header } = useSelector<TStore, TLayoutState>((state) => state.layout)\n  const { currentLanguage, setCurrentLanguage } = useLanguage()\n  const matches = useMediaQuery('(max-width: 570px)')\n\n  return matches ? (\n    <ResponsiveMenu\n      options={header.link}\n      languages={header.language}\n      currentLanguage={currentLanguage}\n      setCurrentLanguage={setCurrentLanguage}\n    />\n  ) : (\n    <Navbar options={header.link} languages={header.language} />\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 50px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.lightPrimary};\n  padding: 0 20px;\n`\n\ntype TextProps = {\n  alignSelf?: boolean\n}\n\nexport const Text = styled.p<TextProps>`\n  color: ${({ theme }) => theme.colors.text};\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  margin-right: ${({ alignSelf }) => (alignSelf ? '60px' : 0)};\n`\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100px;\n  align-items: center;\n`\n\nexport const Link = styled.a`\n  display: flex;\n  justify-content: center;\n`\n","import React from 'react'\nimport { Container, Text, IconsContainer, Link } from './styled'\nimport { AiFillGithub, AiOutlineWhatsApp, AiFillLinkedin } from 'react-icons/ai'\nimport { useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TLayoutState, TSocial } from 'types/layout'\n\nconst Footer = () => {\n  const { footer } = useSelector<TStore, TLayoutState>((state) => state.layout)\n\n  const _renderIcon = (social: string) => {\n    switch (social) {\n      case 'github':\n        return <AiFillGithub size={22} color=\"#D4D4D4\" />\n      case 'linkedin':\n        return <AiFillLinkedin size={22} color=\"#D4D4D4\" />\n      case 'whatsapp':\n        return <AiOutlineWhatsApp size={22} color=\"#D4D4D4\" />\n      default:\n        break\n    }\n  }\n\n  return (\n    <Container>\n      <Text>{footer.contact_email}</Text>\n      <IconsContainer>\n        {footer.socials.map((social: TSocial) => (\n          <Link key={social.label} href={social.url} target=\"blank\">\n            {_renderIcon(social.label)}\n          </Link>\n        ))}\n      </IconsContainer>\n    </Container>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport './App.css'\nimport 'assets/styles.css'\nimport Routes from './routes'\nimport { Provider } from 'react-redux'\nimport store from './storage'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalTheme from 'utils/GlobalTheme'\nimport theme from 'utils/theme'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Header from 'components/Header'\nimport Footer from 'components/Footer'\nimport { LanguageProvider } from 'hooks/useLanguage'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <LanguageProvider>\n          <GlobalTheme />\n          <Router>\n            <Header />\n            <Routes />\n          </Router>\n          <Footer />\n        </LanguageProvider>\n      </ThemeProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}