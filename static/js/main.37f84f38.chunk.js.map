{"version":3,"sources":["utils/PrivateRoute.tsx","views/Home/styled.ts","components/Header/styled.ts","components/Header/ResponsiveMenu.tsx","components/Header/Navbar.tsx","components/Header/index.tsx","views/Home/index.tsx","views/NotFound/styled.ts","views/NotFound/index.tsx","views/Skills/styled.ts","components/SectionTitle/index.tsx","components/Title/index.tsx","components/Subtitle/index.tsx","components/Text/index.tsx","components/Note/index.tsx","enums/actions.ts","views/Skills/IdeaAndPlanning.tsx","views/Skills/Programming.tsx","views/Skills/PersonalSkills.tsx","routes/paths.ts","views/Skills/index.tsx","routes/index.tsx","storage/ducks/auth.ts","storage/ducks/index.ts","storage/saga/auth.ts","storage/saga/index.ts","storage/index.ts","utils/GlobalTheme.ts","utils/theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["PrivateRoute","exact","Component","component","path","localStorage","getItem","to","Container","styled","div","Cursor","span","theme","colors","secondary","keyframes","background","Title","p","fontFamilies","nunito","fontSizes","sectionTitle","title","Subtitle","lato","subtitle","text","Grid","NavLink","Link","active","primary","MenuButton","IconButton","MenuContainer","lightPrimary","open","MenuOption","ResponsiveMenu","props","options","useState","setOpen","onClick","prevState","map","option","key","label","url","window","location","pathname","Navbar","container","direction","justify","OPTIONS","Header","useMediaQuery","WORDS","sleep","milliseconds","Promise","resolve","setTimeout","Home","activeWordIndex","setActiveWordIndex","wordToShow","setwordToShow","isTyping","setIsTyping","typeAndErase","word","a","i","length","slice","useEffect","typing","BackLink","NotFound","Content","SectionsContainer","Section","SectionTitle","Text","EGlobalActions","Note","small","TOOLS","IdeaAndPlanning","tool","index","Programming","paths","triggerAnimation","setTriggerAnimation","animationTimeout","useRef","current","CSSTransition","in","classNames","timeout","unmountOnExit","PersonalSkills","notExact","RouterContainer","route","private","process","initialState","user","appReducer","combineReducers","auth","state","action","type","authSaga","rootSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","RESET","undefined","applyMiddleware","run","StyledApp","createGlobalStyle","App","GlobalTheme","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37f84f38.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\ninterface Props {\n  exact?: boolean\n  component: React.FunctionComponent\n  path: string\n}\n\nconst PrivateRoute = ({ exact, component: Component, path }: Props) => {\n  const token = localStorage.getItem('access_token')\n\n  const renderComponent = () => {\n    if (token) {\n      return (\n        <Route\n          exact={exact ? exact : false}\n          path={path}\n          component={Component}\n        />\n      )\n    }\n    return <Redirect to=\"/\" />\n  }\n\n  return renderComponent()\n}\n\nexport default PrivateRoute\n","import styled, { keyframes } from 'styled-components'\nimport { Theme } from 'utils/theme'\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nconst blink = ({ theme }: { theme: Theme }) => keyframes`\n  0% { background-color: ${theme.colors.secondary} }\n  49% { background-color: ${theme.colors.secondary} }\n  50% { background-color: ${theme.colors.background} }\n  99% { background-color: ${theme.colors.background} }\n  100% { background-color: ${theme.colors.secondary} }\n`\n\ntype CursorProps = {\n  typing?: boolean\n}\n\nexport const Cursor = styled.span<CursorProps>`\n  display: inline-block;\n  width: 3px;\n  height: 100%;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  margin-left: 5px;\n  animation: ${blink} 1s infinite;\n`\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.title};\n  }\n`\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.text};\n`\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Grid } from '@material-ui/core'\nimport { IconButton } from '@material-ui/core'\n\nexport const Container = styled(Grid)`\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 20px;\n  height: 10vh;\n  position: absolute;\n`\ntype NavLinkProps = {\n  active: string\n}\n\nexport const NavLink = styled(Link)<NavLinkProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 0px 20px;\n`\n\nexport const MenuButton = styled(IconButton)`\n  color: ${({ theme }) => theme.colors.secondary} !important;\n  position: absolute !important;\n  top: 10px;\n  right: 10px;\n  z-index: 2;\n`\n\ntype MenuContainerProps = {\n  open: boolean\n}\n\nexport const MenuContainer = styled.div<MenuContainerProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 100vh;\n  width: 100%;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.colors.lightPrimary};\n  clip-path: circle(\n    ${({ open }) => (open ? '200% at 90% -10%' : '0 at 90% -10%')}\n  );\n  -webkit-clip-path: circle(\n    ${({ open }) => (open ? '200% at 90% -10%' : '0 at 90% -10%')}\n  );\n  transition: all 0.5s ease-in-out;\n`\nexport const MenuOption = styled(Link)<NavLinkProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 20px;\n`\n","import React, { FC, useState } from 'react'\nimport { MenuButton, MenuContainer, MenuOption } from './styled'\nimport MenuIcon from '@material-ui/icons/Menu'\n\ntype Option = {\n  url: string\n  label: string\n}\n\ntype Props = {\n  options: Array<Option>\n}\n\nconst ResponsiveMenu: FC<Props> = (props: Props) => {\n  const { options } = props\n  const [open, setOpen] = useState<boolean>(false)\n\n  return (\n    <>\n      <MenuButton onClick={() => setOpen((prevState: boolean) => !prevState)}>\n        <MenuIcon />\n      </MenuButton>\n      <MenuContainer open={open}>\n        {options.map((option: Option) => (\n          <MenuOption\n            key={option.label}\n            to={option.url}\n            active={window.location.pathname === option.url ? 'true' : 'false'}>\n            {option.label}\n          </MenuOption>\n        ))}\n      </MenuContainer>\n    </>\n  )\n}\n\nexport default ResponsiveMenu\n","import React, { FC } from 'react'\nimport { Container, NavLink } from './styled'\n\ntype Option = {\n  url: string\n  label: string\n}\n\ntype Props = {\n  options: Array<Option>\n}\n\nconst Navbar: FC<Props> = (props: Props) => {\n  const { options } = props\n  return (\n    <Container container direction=\"row\" justify=\"flex-end\">\n      {options.map((option: Option) => (\n        <NavLink\n          key={option.label}\n          to={option.url}\n          active={window.location.pathname === option.url ? 'true' : 'false'}>\n          {option.label}\n        </NavLink>\n      ))}\n    </Container>\n  )\n}\n\nexport default Navbar\n","import React, { FC } from 'react'\nimport { useMediaQuery } from '@material-ui/core'\nimport ResponsiveMenu from './ResponsiveMenu'\nimport Navbar from './Navbar'\n\nconst OPTIONS = [\n  {\n    url: '/portfolio',\n    label: 'Home',\n  },\n  {\n    url: '/portfolio/about',\n    label: 'About',\n  },\n  {\n    url: '/portfolio/projects',\n    label: 'Projects',\n  },\n  {\n    url: '/portfolio/skills',\n    label: 'Skills',\n  },\n  {\n    url: '/portfolio/contact',\n    label: 'Contact',\n  },\n]\n\nconst Header: FC = () => {\n  const matches = useMediaQuery('(max-width: 475px)')\n\n  return matches ? (\n    <ResponsiveMenu options={OPTIONS} />\n  ) : (\n    <Navbar options={OPTIONS} />\n  )\n}\n\nexport default Header\n","import React, { FC, useState, useEffect } from 'react'\nimport { Container, Cursor, Title, Subtitle } from './styled'\nimport Header from 'components/Header'\n\nconst WORDS = ['Creative', 'Hard Worker', 'Frontend', 'React', 'React Native']\nconst TYPING_DELAY = 150\nconst ERASING_DELAY = 100\nconst START_TO_ERASE_DELAY = 1500\nconst NEXT_WORD = 1000\n\nconst sleep = (milliseconds: number) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds))\n}\n\nconst Home: FC = () => {\n  const [activeWordIndex, setActiveWordIndex] = useState<number>(0)\n  const [wordToShow, setwordToShow] = useState<string>('')\n  const [isTyping, setIsTyping] = useState(true)\n\n  const typeAndErase = async (word: string) => {\n    // Typing\n    setIsTyping(true)\n    for (let i = 0; i < word.length; i++) {\n      await sleep(TYPING_DELAY)\n      setwordToShow((prevState) => prevState + word[i])\n    }\n    setIsTyping(false)\n    await sleep(START_TO_ERASE_DELAY)\n    setIsTyping(true)\n    // Erasing\n    for (let i = 0; i < word.length; i++) {\n      await sleep(ERASING_DELAY)\n      setwordToShow((prevState) => prevState.slice(0, prevState.length - 1))\n    }\n    // Next Word\n    setIsTyping(false)\n    await sleep(NEXT_WORD)\n    setActiveWordIndex((prevState) => (prevState + 1) % WORDS.length)\n  }\n\n  useEffect(() => {\n    typeAndErase(WORDS[activeWordIndex])\n  }, [activeWordIndex])\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Subtitle>If you're searching for a</Subtitle>\n        <Title>\n          {wordToShow}\n          <Cursor typing={isTyping}>&nbsp;</Cursor>\n        </Title>\n        <Subtitle>Developer. You came to the right place!</Subtitle>\n      </Container>\n    </>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.title};\n  }\n`\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.text};\n`\nexport const BackLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-top: 20px;\n  text-decoration: underline;\n`\n","import React, { FC } from 'react'\nimport { Container, Title, Subtitle, BackLink } from './styled'\n\nconst NotFound: FC = () => {\n  return (\n    <Container>\n      <Title>Page not Found!</Title>\n      <Subtitle>Dammit!</Subtitle>\n      <Subtitle>I swear to God it worked on my machine.</Subtitle>\n      <BackLink to=\"/portfolio\">Back to homepage</BackLink>\n    </Container>\n  )\n}\n\nexport default NotFound\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  @media screen and (max-width: 960px) {\n    padding: 15% 0 5% 0;\n  }\n`\n\nexport const Content = styled.div`\n  min-height: 80vh;\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  @media screen and (max-width: 960px) {\n    min-height: 90vh;\n  }\n`\n\nexport const SectionsContainer = styled.div`\n  min-height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n  }\n`\n\nexport const Section = styled.div`\n  width: 33%;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  @media screen and (max-width: 960px) {\n    width: 100%;\n    align-self: center;\n  }\n  @media screen and (max-width: 475px) {\n    width: 100%;\n    align-self: flex-start;\n  }\n`\n","import styled from 'styled-components'\n\nconst SectionTitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.lightPrimary};\n  text-transform: uppercase;\n`\n\nexport default SectionTitle\n","import styled from 'styled-components'\n\nconst Title = styled.p`\n  margin: 20px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Title\n","import styled from 'styled-components'\n\nconst Subtitle = styled.p`\n  margin: 15px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Subtitle\n","import styled from 'styled-components'\n\nconst Text = styled.p`\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n  margin: 2px 0;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Text\n","import styled from 'styled-components'\n\nconst Note = styled.p`\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n  margin: 0;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Note\n","export enum EGlobalActions {\n  RESET = 'GLOBAL/RESET'\n}\n","import React, { FC } from 'react'\nimport { Section } from './styled'\nimport Title from 'components/Title'\nimport Subtitle from 'components/Subtitle'\nimport Text from 'components/Text'\nimport Note from 'components/Note'\n\nconst TOOLS = ['Project Management Tools', 'Figma', 'Adobe XD', 'Pen & Papper']\n\nconst IdeaAndPlanning: FC = () => {\n  return (\n    <Section>\n      <Title>Idea &amp; Planning</Title>\n      <Text>\n        I value conceiving the idea and make part of the plan creation to\n        achieve it in the most effective way.\n      </Text>\n      <Subtitle>Principles</Subtitle>\n      <Text>\n        UI/UX, Responsive Design, User friendly, Agile Development, SCRUM.\n      </Text>\n      <Subtitle>Tools</Subtitle>\n      {TOOLS.map((tool, index) => (\n        <Text key={index}>{tool}</Text>\n      ))}\n      <Note>(Always with it for insights)</Note>\n    </Section>\n  )\n}\n\nexport default IdeaAndPlanning\n","import React, { FC } from 'react'\nimport { Section } from './styled'\nimport Title from 'components/Title'\nimport Subtitle from 'components/Subtitle'\nimport Text from 'components/Text'\n\nconst TOOLS = [\n  'VS Code',\n  'Material UI',\n  'Ant Design',\n  'Github',\n  'Github Actions',\n]\n\nconst Programming: FC = () => {\n  return (\n    <Section>\n      <Title>Programming</Title>\n      <Text>\n        I really like to code things that make people's life easier and happier.\n        Give life to anyone's idea.\n      </Text>\n      <Subtitle>Languages</Subtitle>\n      <Text>\n        JavaScript, TypeScript, React, React Native, HTML &amp; CSS, NodeJS,\n        ExpressJS, Strapi, MongoDB.\n      </Text>\n      <Subtitle>Tools</Subtitle>\n      {TOOLS.map((tool, index) => (\n        <Text key={index}>{tool}</Text>\n      ))}\n    </Section>\n  )\n}\n\nexport default Programming\n","import React, { FC } from 'react'\nimport { Section } from './styled'\nimport Title from 'components/Title'\nimport Subtitle from 'components/Subtitle'\nimport Text from 'components/Text'\nimport Note from 'components/Note'\n\nconst TOOLS = ['Slack', 'Zoom', 'Google Meets', 'Spotify']\n\nconst Programming: FC = () => {\n  return (\n    <Section>\n      <Title>Personal Skills</Title>\n      <Text>\n        My friends says I'm can jump easily between fun and work, making any\n        activity painless and enjoyable.\n      </Text>\n      <Subtitle>Qualities</Subtitle>\n      <Text>\n        Patient, creative, teamwork, funny, motivated and communicative\n      </Text>\n      <Subtitle>Tools</Subtitle>\n      {TOOLS.map((tool, index) => (\n        <Text key={index}>{tool}</Text>\n      ))}\n      <Note>(A good song to hype!)</Note>\n    </Section>\n  )\n}\n\nexport default Programming\n","import Home from 'views/Home'\nimport NotFound from 'views/NotFound'\nimport Skills from 'views/Skills'\n\nconst paths = [\n  {\n    path: '/',\n    component: Home,\n  },\n  {\n    path: '/skills',\n    component: Skills,\n  },\n  {\n    path: '*',\n    component: NotFound,\n    notExact: true,\n  },\n]\n\nexport default paths\n","import React, { FC, useRef, useState, useEffect } from 'react'\nimport { Container, Content, SectionsContainer } from './styled'\nimport Header from 'components/Header'\nimport SectionTitle from 'components/SectionTitle'\nimport IdeaAndPlanning from './IdeaAndPlanning'\nimport Programming from './Programming'\nimport PersonalSkills from './PersonalSkills'\nimport { CSSTransition } from 'react-transition-group'\n\nconst Skills: FC = () => {\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n  const animationTimeout = useRef<number>(0)\n\n  useEffect(() => {\n    animationTimeout.current = setTimeout(() => {\n      setTriggerAnimation(true)\n    }, 1000)\n    return () => {}\n  }, [])\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <SectionTitle>Skills</SectionTitle>\n          <CSSTransition\n            in={triggerAnimation}\n            classNames=\"fade\"\n            timeout={500}\n            unmountOnExit>\n            <SectionsContainer>\n              <IdeaAndPlanning />\n              <Programming />\n              <PersonalSkills />\n            </SectionsContainer>\n          </CSSTransition>\n        </Content>\n      </Container>\n    </>\n  )\n}\n\nexport default Skills\n","import React, { FC } from 'react'\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\nimport PrivateRoute from '../utils/PrivateRoute'\nimport paths from './paths'\nimport TRoute from '../types/router'\n\nconst RouterContainer: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        {paths.map((route: TRoute) => {\n          if (route.private) {\n            return (\n              <PrivateRoute\n                exact={route?.notExact ? false : true}\n                component={route.component}\n                path={process.env.PUBLIC_URL + route.path}\n              />\n            )\n          }\n          return (\n            <Route\n              exact={route?.notExact ? false : true}\n              path={process.env.PUBLIC_URL + route.path}\n              component={route.component}\n              key={route.path}\n            />\n          )\n        })}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default RouterContainer\n","import { TState } from '../../types/auth'\nimport { TAction } from '../../types/storage'\n\n// ACTION TYPES\nexport const Types = {}\n\n// INITIAL STATE\nconst initialState: TState = {\n  user: {}\n}\n\n// REDUCER\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TAction, TStore } from 'types/storage'\nimport { EGlobalActions } from 'enums/actions'\n\n// Reducers\nimport auth from './auth'\n\nconst appReducer = combineReducers<TStore | undefined, TAction>({\n  auth,\n})\n\nexport default (state: TStore, action: TAction) => {\n  if (action.type === EGlobalActions.RESET) {\n    return appReducer(undefined, action)\n  }\n  return appReducer(state, action)\n}\n","export default function* authSaga() {}\n","import { fork } from 'redux-saga/effects'\n\n// Sagas\nimport authSaga from './auth'\n\nexport default function* rootSaga() {\n  yield [fork(authSaga)]\n}\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport createSagaMiddleware, { SagaMiddleware } from 'redux-saga'\nimport ReduxDucks from './ducks'\nimport rootSaga from './saga'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\n  }\n}\n\nconst sagaMiddleware: SagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers: typeof compose =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore<any, any, any, any>(\n  ReduxDucks,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import { createGlobalStyle } from 'styled-components'\nimport { Theme } from './theme'\n\nconst StyledApp = createGlobalStyle<{ theme: Theme }>`\nbody {\n  margin: 0;\n  background-color: ${({ theme }) => theme.colors.background};\n  min-height: 100vh;\n  font-family: Nunito, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n  #root {\n    height: 100%;\n    overflow: hidden;\n    box-sizing: border-box;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  *{\n    box-sizing: border-box;\n  }\n`\nexport default StyledApp\n","const theme = {\n  colors: {\n    background: '#24213E',\n    text: '#D4D4D4',\n    primary: '#5E548E',\n    secondary: '#E4E4A8',\n    lightPrimary: '#322F4D',\n  },\n  fontSizes: {\n    sectionTitle: '4.2rem',\n    title: '2rem',\n    subtitle: '1.2rem',\n    text: '1rem',\n    small: '12px',\n  },\n  fontFamilies: {\n    nunito: 'Nunito Sans',\n    lato: 'Lato',\n  },\n}\n\nexport type Theme = typeof theme\nexport default theme\n","import React from 'react'\nimport './App.css'\nimport 'assets/styles.css'\nimport Routes from './routes'\nimport { Provider } from 'react-redux'\nimport store from './storage'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalTheme from 'utils/GlobalTheme'\nimport theme from 'utils/theme'\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalTheme />\n        <Router>\n          <Switch>\n            <Routes />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}