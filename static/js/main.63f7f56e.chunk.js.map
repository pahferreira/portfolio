{"version":3,"sources":["utils/PrivateRoute.tsx","views/Home/styled.ts","storage/ducks/home.ts","hooks/useLanguage.tsx","views/Home/index.tsx","views/NotFound/styled.ts","storage/ducks/notFound.ts","views/NotFound/index.tsx","views/Skills/styled.ts","components/Container/index.tsx","components/Content/index.tsx","components/SectionTitle/index.tsx","components/FadeAnimation/index.tsx","storage/ducks/skills.ts","components/Title/index.tsx","components/Subtitle/index.tsx","components/Text/index.tsx","components/Note/index.tsx","views/Skills/Section.tsx","views/Skills/index.tsx","views/About/styled.ts","enums/actions.ts","views/About/Desktop.tsx","views/About/Mobile.tsx","storage/ducks/about.ts","routes/paths.ts","views/About/index.tsx","storage/ducks/layout.ts","routes/index.tsx","storage/ducks/auth.ts","storage/ducks/index.ts","storage/saga/auth.ts","services/API.ts","services/Layout/index.ts","storage/saga/layout.ts","services/Home/index.ts","storage/saga/home.ts","services/About/index.ts","storage/saga/about.ts","services/Skills/index.ts","storage/saga/skills.ts","services/NotFound/index.ts","storage/saga/notFound.ts","storage/saga/index.ts","storage/index.ts","utils/GlobalTheme.ts","utils/theme.ts","components/Header/styled.ts","components/Header/ResponsiveMenu.tsx","components/Header/Navbar.tsx","components/Header/index.tsx","components/Footer/styled.ts","components/Footer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PrivateRoute","exact","Component","component","path","localStorage","getItem","to","Container","styled","div","Cursor","span","theme","colors","secondary","keyframes","background","Title","p","fontFamilies","nunito","fontSizes","sectionTitle","title","Subtitle","lato","subtitle","text","Types","initialState","top_message","bottom_message","qualities","LanguageContext","createContext","LanguageProvider","children","useState","currentLanguage","setCurrentLanguage","Provider","value","useLanguage","context","useContext","Error","sleep","milliseconds","Promise","resolve","setTimeout","Home","activeWordIndex","setActiveWordIndex","wordToShow","setwordToShow","isTyping","setIsTyping","words","setWords","dispatch","useDispatch","home","useSelector","state","triggerEffect","setTriggerEffect","useEffect","type","payload","trigger","map","quality","typeAndErase","useCallback","a","word","i","prevState","length","slice","typing","BackLink","Link","message","url_label","NotFound","notFound","SectionsContainer","Content","SectionTitle","lightPrimary","FadeAnimation","activateAnimation","CSSTransition","in","classNames","timeout","unmountOnExit","section_title","sections","textTransform","Text","align","Note","small","IdeaAndPlanning","props","section","description","part","tools_title","tools","tool","index","key","note","Skills","triggerAnimation","setTriggerAnimation","skills","Section","EGlobalActions","AboutContent","primary","Image","image","MobileSection","MobileHeader","MobileImage","MobileLabelContainer","MobileAbountContent","Desktop","greeting","triggerSecondAnimation","setTriggerSecondAnimation","onEntered","picture","url","paths","matches","useMediaQuery","about","Mobile","notExact","header","link","language","footer","contact_email","socials","RouterContainer","route","private","process","user","appReducer","combineReducers","auth","action","layout","loading","authSaga","api","axios","create","baseURL","getLayout","API","post","query","data","getLayoutContent","layoutSaga","put","call","response","all","takeLatest","getHomeContent","loadHomeContent","homeSaga","getAboutContent","loadAboutContent","aboutSaga","getSkillsContent","skill","loadSkillsContent","skillsSaga","getNotFoundContent","loadNotFoundContent","notFoundSaga","rootSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","RESET","undefined","applyMiddleware","run","StyledApp","createGlobalStyle","NavContainer","NavLink","active","MenuButton","IconButton","MenuOverlay","open","MenuContainer","MenuOption","LanguageSelector","select","LanguageSelectorContainer","Separator","LanguageOption","ResponsiveMenu","options","languages","setOpen","location","useLocation","handleClick","onClick","option","label","pathname","handleLanguageClick","Navbar","size","color","onChange","e","target","Header","alignSelf","IconsContainer","Footer","social","href","_renderIcon","App","GlobalTheme","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.63f7f56e.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\ninterface Props {\n  exact?: boolean\n  component: React.FunctionComponent\n  path: string\n}\n\nconst PrivateRoute = ({ exact, component: Component, path }: Props) => {\n  const token = localStorage.getItem('access_token')\n\n  const renderComponent = () => {\n    if (token) {\n      return (\n        <Route\n          exact={exact ? exact : false}\n          path={path}\n          component={Component}\n        />\n      )\n    }\n    return <Redirect to=\"/\" />\n  }\n\n  return renderComponent()\n}\n\nexport default PrivateRoute\n","import styled, { keyframes } from 'styled-components'\nimport { Theme } from 'utils/theme'\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  @media screen and (max-width: 360px) {\n    padding: 0 5px;\n  }\n`\n\nconst blink = ({ theme }: { theme: Theme }) => keyframes`\n  0% { background-color: ${theme.colors.secondary} }\n  49% { background-color: ${theme.colors.secondary} }\n  50% { background-color: ${theme.colors.background} }\n  99% { background-color: ${theme.colors.background} }\n  100% { background-color: ${theme.colors.secondary} }\n`\n\ntype CursorProps = {\n  typing?: boolean\n}\n\nexport const Cursor = styled.span<CursorProps>`\n  display: inline-block;\n  width: 3px;\n  height: 100%;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  margin-left: 5px;\n  animation: ${blink} 1s infinite;\n`\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.title};\n  }\n`\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n`\n","import { TState } from 'types/home'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'HOME/TRIGGER',\n  REQUEST: 'HOME/REQUEST',\n  SUCCESS: 'HOME/SUCCESS',\n  FULFILL: 'HOME/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  top_message: '',\n  bottom_message: '',\n  qualities: [],\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { useState, createContext, useContext, FC } from 'react'\n\ntype LanguageContextType = {\n  currentLanguage: string\n  setCurrentLanguage: (language: string) => void\n}\n\nconst LanguageContext: React.Context<LanguageContextType | null> = createContext<LanguageContextType | null>(\n  null\n)\n\ntype Props = {\n  children: Array<JSX.Element> | JSX.Element\n}\n\nconst LanguageProvider: FC<Props> = ({ children }: Props) => {\n  const [currentLanguage, setCurrentLanguage] = useState<string>('en')\n\n  return (\n    <LanguageContext.Provider value={{ currentLanguage, setCurrentLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  )\n}\n\nconst useLanguage = (): LanguageContextType => {\n  const context: LanguageContextType | null = useContext(LanguageContext)\n  if (!context) {\n    throw new Error('useLanguage must be used inside LanguageProvider')\n  } else {\n    return context\n  }\n}\n\nexport { useLanguage, LanguageProvider }\n","import React, { FC, useState, useEffect, useCallback } from 'react'\nimport { Container, Cursor, Title, Subtitle } from './styled'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as THomeState } from 'types/home'\nimport { trigger } from 'storage/ducks/home'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst TYPING_DELAY = 150\nconst ERASING_DELAY = 100\nconst START_TO_ERASE_DELAY = 1500\nconst NEXT_WORD = 1000\n\nconst sleep = (milliseconds: number) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds))\n}\n\nconst Home: FC = () => {\n  const { currentLanguage } = useLanguage()\n  const [activeWordIndex, setActiveWordIndex] = useState<number>(0)\n  const [wordToShow, setwordToShow] = useState<string>('')\n  const [isTyping, setIsTyping] = useState(false)\n  const [words, setWords] = useState<Array<string>>([])\n  const dispatch = useDispatch()\n  const home = useSelector<TStore, THomeState>((state) => state.home)\n  const [triggerEffect, setTriggerEffect] = useState(true)\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  useEffect(() => {\n    setWords(home.qualities.map((quality) => quality.value))\n  }, [home.qualities])\n\n  const typeAndErase = useCallback(\n    async (word: string = '') => {\n      // Typing\n      setTriggerEffect(false)\n      setIsTyping(true)\n      for (let i = 0; i < word.length; i++) {\n        await sleep(TYPING_DELAY)\n        setwordToShow((prevState) => prevState + word[i])\n      }\n      setIsTyping(false)\n      await sleep(START_TO_ERASE_DELAY)\n      setIsTyping(true)\n      // Erasing\n      for (let i = 0; i < word.length; i++) {\n        await sleep(ERASING_DELAY)\n        setwordToShow((prevState) => prevState.slice(0, prevState.length - 1))\n      }\n      // Next Word\n      setIsTyping(false)\n      await sleep(NEXT_WORD)\n      setActiveWordIndex((activeWordIndex + 1) % words.length)\n      setTriggerEffect(true)\n    },\n    [words, activeWordIndex]\n  )\n\n  useEffect(() => {\n    if (words.length > 0 && triggerEffect) {\n      typeAndErase(words[activeWordIndex])\n    }\n  }, [activeWordIndex, typeAndErase, words, triggerEffect])\n\n  return (\n    <Container>\n      <Subtitle>{home.top_message}</Subtitle>\n      <Title>\n        {wordToShow}\n        <Cursor typing={isTyping}>&nbsp;</Cursor>\n      </Title>\n      <Subtitle>{home.bottom_message}</Subtitle>\n    </Container>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.title};\n  }\n`\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.text};\n`\nexport const BackLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-top: 20px;\n  text-decoration: underline;\n`\n","import { TState } from 'types/notFound'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'NOT_FOUND/TRIGGER',\n  REQUEST: 'NOT_FOUND/REQUEST',\n  SUCCESS: 'NOT_FOUND/SUCCESS',\n  FULFILL: 'NOT_FOUND/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  title: '',\n  subtitle: '',\n  message: '',\n  url_label: '',\n}\n\n// Reducer\nexport default function (state: TState = initialState, action: TAction) {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { FC, useEffect } from 'react'\nimport { Container, Title, Subtitle, BackLink } from './styled'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLanguage } from 'hooks/useLanguage'\nimport { TStore } from 'types/storage'\nimport { TState as TNotFoundState } from 'types/notFound'\nimport { trigger } from 'storage/ducks/notFound'\n\nconst NotFound: FC = () => {\n  const dispatch = useDispatch()\n  const { currentLanguage } = useLanguage()\n  const { title, subtitle, message, url_label } = useSelector<\n    TStore,\n    TNotFoundState\n  >((state) => state.notFound)\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Subtitle>{subtitle}</Subtitle>\n      <Subtitle>{message}</Subtitle>\n      <BackLink to=\"/portfolio\">{url_label}</BackLink>\n    </Container>\n  )\n}\n\nexport default NotFound\n","import styled from 'styled-components'\n\nexport const SectionsContainer = styled.div`\n  min-height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n  }\n`\n\nexport const Container = styled.div`\n  width: 33%;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  @media screen and (max-width: 960px) {\n    width: 100%;\n    align-self: center;\n  }\n  @media screen and (max-width: 475px) {\n    width: 100%;\n    align-self: flex-start;\n  }\n`\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  @media screen and (max-width: 960px) {\n    padding: 8% 0 5% 0;\n  }\n  @media screen and (max-width: 768px) {\n    padding: 11% 0 5% 0;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst Content = styled.div`\n  min-height: 80vh;\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  @media screen and (max-width: 960px) {\n    min-height: 90vh;\n  }\n`\n\nexport default Content\n","import styled from 'styled-components'\n\nconst SectionTitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.lightPrimary};\n  text-transform: uppercase;\n  @media screen and (max-width: 400px) {\n    font-size: 3rem;\n  }\n`\n\nexport default SectionTitle\n","import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\ntype Props = {\n  children: JSX.Element | Array<JSX.Element>\n  activateAnimation: boolean\n}\n\nconst FadeAnimation = ({ children, activateAnimation }: Props) => (\n  <CSSTransition\n    in={activateAnimation}\n    classNames=\"fade\"\n    timeout={500}\n    unmountOnExit>\n    {children}\n  </CSSTransition>\n)\n\nexport default FadeAnimation\n","import { TAction } from 'types/storage'\nimport { TState } from 'types/skills'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'SKILLS/TRIGGER',\n  REQUEST: 'SKILLS/REQUEST',\n  SUCCESS: 'SKILLS/SUCCESS',\n  FULFILL: 'SKILLS/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  section_title: '',\n  sections: [],\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import styled from 'styled-components'\n\ntype TitleProps = {\n  textTransform?: string\n}\n\nconst Title = styled.p<TitleProps>`\n  margin: 10px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: ${({ textTransform }) =>\n    textTransform ? textTransform : 'none'};\n  text-align: center;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n    font-size: 2.5rem;\n    line-height: 3rem;\n  }\n  @media screen and (max-width: 400px) {\n    text-align: left;\n    font-size: 2rem;\n    line-height: 3rem;\n  }\n`\n\nexport default Title\n","import styled from 'styled-components'\n\nconst Subtitle = styled.p`\n  margin: 15px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Subtitle\n","import styled from 'styled-components'\n\ntype TextProps = {\n  align?: string\n}\n\nconst Text = styled.p<TextProps>`\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: ${({ align }) => (align ? align : 'center')};\n  margin: 2px 0;\n  letter-spacing: 1px;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Text\n","import styled from 'styled-components'\n\nconst Note = styled.p`\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n  margin: 0;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Note\n","import React, { FC } from 'react'\nimport { Container } from './styled'\nimport Title from 'components/Title'\nimport Subtitle from 'components/Subtitle'\nimport Text from 'components/Text'\nimport Note from 'components/Note'\nimport { TSection, TTool } from 'types/skills'\n\ntype Props = {\n  section: TSection\n}\n\nconst IdeaAndPlanning: FC<Props> = (props: Props) => {\n  const { section } = props\n\n  return (\n    <Container>\n      <Title textTransform=\"uppercase\">{section.title}</Title>\n      <Text>{section.description}</Text>\n      <Subtitle>{section.part.title}</Subtitle>\n      <Text>{section.part.description}</Text>\n      <Subtitle>{section.tools_title}</Subtitle>\n      {section.tools.map((tool: TTool, index: number) => (\n        <>\n          <Text key={index}>{tool.value}</Text>\n          {tool.note && <Note>({tool?.note})</Note>}\n        </>\n      ))}\n    </Container>\n  )\n}\n\nexport default IdeaAndPlanning\n","import React, { FC, useState, useEffect } from 'react'\nimport { SectionsContainer } from './styled'\nimport Container from 'components/Container'\nimport Content from 'components/Content'\nimport SectionTitle from 'components/SectionTitle'\nimport FadeAnimation from 'components/FadeAnimation'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TSkillsState } from 'types/skills'\nimport { trigger } from 'storage/ducks/skills'\nimport Section from './Section'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst Skills: FC = () => {\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n  const dispatch = useDispatch()\n  const skills = useSelector<TStore, TSkillsState>((state) => state.skills)\n  const { currentLanguage } = useLanguage()\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  useEffect(() => {\n    if (skills.sections.length > 0) {\n      setTriggerAnimation(true)\n    }\n  }, [skills.sections])\n\n  return (\n    <>\n      <Container>\n        <Content>\n          <SectionTitle>{skills.section_title}</SectionTitle>\n          <FadeAnimation activateAnimation={triggerAnimation}>\n            <SectionsContainer>\n              {skills.sections.map((section, index) => (\n                <Section section={section} key={index} />\n              ))}\n            </SectionsContainer>\n          </FadeAnimation>\n        </Content>\n      </Container>\n    </>\n  )\n}\n\nexport default Skills\n","import styled from 'styled-components'\n\nexport const Section = styled.div`\n  height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`\n\nexport const AboutContent = styled.div`\n  width: 55%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background-color: ${({ theme }) => theme.colors.primary};\n  height: 90%;\n  padding: 20px 30px;\n  position: absolute;\n  z-index: 1;\n  @media screen and (max-width: 1024px) {\n    width: 60%;\n  }\n`\n\ntype ImageProps = {\n  image: string\n}\n\nexport const Image = styled.div<ImageProps>`\n  width: 52.5%;\n  height: 434px;\n  background-image: ${({ image }) => `url(${image})`};\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: relative;\n  left: 50%;\n`\n\nexport const MobileSection = styled.div`\n  height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (max-width: 475px) {\n    align-items: flex-start;\n  }\n`\n\nexport const MobileHeader = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (max-width: 475px) {\n    flex-direction: row;\n    width: 98%;\n    margin-top: 40px;\n  }\n`\n\nexport const MobileImage = styled.div<ImageProps>`\n  width: 200px;\n  height: 200px;\n  background-image: ${({ image }) => `url(${image})`};\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 300px;\n  border: 2px solid ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 22px;\n  @media screen and (max-width: 475px) {\n    width: 50%;\n    margin-right: 10%;\n  }\n  @media screen and (max-width: 430px) {\n    width: 150px;\n    height: 150px;\n    margin-right: 5%;\n  }\n  @media screen and (max-width: 400px) {\n    width: 130px;\n    height: 130px;\n  }\n`\n\nexport const MobileLabelContainer = styled.div`\n  width: 45%;\n`\n\nexport const MobileAbountContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 90%;\n  padding: 20px 30px;\n  @media screen and (max-width: 475px) {\n    padding: 20px 0;\n  }\n`\n","export enum EGlobalActions {\n  RESET = 'GLOBAL/RESET'\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport Text from 'components/Text'\nimport Title from 'components/Title'\nimport { Section, Image, AboutContent } from './styled'\nimport { CSSTransition } from 'react-transition-group'\n\ntype Props = {\n  greeting: string\n  description: string\n  title: string\n  image: string\n}\n\nconst Desktop: FC<Props> = (props: Props) => {\n  const { greeting, description, title, image } = props\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n  const [triggerSecondAnimation, setTriggerSecondAnimation] = useState(false)\n\n  useEffect(() => {\n    setTriggerAnimation(true)\n  }, [])\n\n  return (\n    <Section>\n      <CSSTransition\n        in={triggerSecondAnimation}\n        classNames=\"appear-box\"\n        timeout={1000}\n        unmountOnExit>\n        <AboutContent>\n          <Text>{greeting}</Text>\n          <Title>{title},</Title>\n          <Text align=\"left\">{description}</Text>\n        </AboutContent>\n      </CSSTransition>\n      <CSSTransition\n        in={triggerAnimation}\n        classNames=\"appear\"\n        timeout={500}\n        unmountOnExit\n        onEntered={() => setTriggerSecondAnimation(true)}>\n        <Image image={image} />\n      </CSSTransition>\n    </Section>\n  )\n}\n\nexport default Desktop\n","import React, { FC, useState, useEffect } from 'react'\nimport Text from 'components/Text'\nimport Title from 'components/Title'\nimport FadeAnimation from 'components/FadeAnimation'\nimport {\n  MobileSection,\n  MobileImage,\n  MobileHeader,\n  MobileAbountContent,\n  MobileLabelContainer,\n} from './styled'\n\ntype Props = {\n  greeting: string\n  description: string\n  title: string\n  image: string\n}\n\nconst Desktop: FC<Props> = (props: Props) => {\n  const { greeting, description, title, image } = props\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n\n  useEffect(() => {\n    setTriggerAnimation(true)\n  }, [])\n\n  return (\n    <FadeAnimation activateAnimation={triggerAnimation}>\n      <MobileSection>\n        <MobileHeader>\n          <MobileImage image={image} />\n          <MobileLabelContainer>\n            <Text>{greeting}</Text>\n            <Title>{title},</Title>\n          </MobileLabelContainer>\n        </MobileHeader>\n        <MobileAbountContent>\n          <Text>{description}</Text>\n        </MobileAbountContent>\n      </MobileSection>\n    </FadeAnimation>\n  )\n}\n\nexport default Desktop\n","import { TAction } from 'types/storage'\nimport { TState } from 'types/about'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'ABOUT/TRIGGER',\n  REQUEST: 'ABOUT/REQUEST',\n  SUCCESS: 'ABOUT/SUCCESS',\n  FULFILL: 'ABOUT/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  section_title: '',\n  title: '',\n  greeting: '',\n  description: '',\n  picture: {\n    url: '',\n  },\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import Home from 'views/Home'\nimport NotFound from 'views/NotFound'\nimport Skills from 'views/Skills'\nimport About from 'views/About'\n\nconst paths = [\n  {\n    path: '/',\n    component: Home,\n  },\n  {\n    path: '/skills',\n    component: Skills,\n  },\n  {\n    path: '/about',\n    component: About,\n  },\n  {\n    path: '*',\n    component: NotFound,\n    notExact: true,\n  },\n]\n\nexport default paths\n","import React, { FC, useEffect } from 'react'\nimport Container from 'components/Container'\nimport Content from 'components/Content'\nimport SectionTitle from 'components/SectionTitle'\nimport { useMediaQuery } from '@material-ui/core'\nimport Desktop from './Desktop'\nimport Mobile from './Mobile'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TState as TAboutState } from 'types/about'\nimport { TStore } from 'types/storage'\nimport { trigger } from 'storage/ducks/about'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst About: FC = () => {\n  const matches = useMediaQuery('(max-width: 960px)')\n  const dispatch = useDispatch()\n  const about = useSelector<TStore, TAboutState>((state) => state.about)\n  const { currentLanguage } = useLanguage()\n\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  return (\n    <>\n      <Container>\n        <Content>\n          <SectionTitle>{about.section_title}</SectionTitle>\n          {matches ? (\n            <Mobile\n              greeting={about.greeting}\n              title={about.title}\n              description={about.description}\n              image={about.picture.url}\n            />\n          ) : (\n            <Desktop\n              greeting={about.greeting}\n              title={about.title}\n              description={about.description}\n              image={about.picture.url}\n            />\n          )}\n        </Content>\n      </Container>\n    </>\n  )\n}\n\nexport default About\n","import { TState } from 'types/layout'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'LAYOUT/TRIGGER',\n  REQUEST: 'LAYOUT/REQUEST',\n  SUCCESS: 'LAYOUT/SUCCESS',\n  FULFILL: 'LAYOUT/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  header: {\n    link: [],\n    language: [],\n  },\n  footer: {\n    contact_email: '',\n    socials: [],\n  },\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = (currentLanguage: string) => {\n  return {\n    type: Types.TRIGGER,\n    payload: { currentLanguage },\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { FC, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport PrivateRoute from 'utils/PrivateRoute'\nimport paths from './paths'\nimport TRoute from 'types/router'\nimport { trigger } from 'storage/ducks/layout'\nimport { useDispatch } from 'react-redux'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst RouterContainer: FC = () => {\n  const dispatch = useDispatch()\n  const { currentLanguage } = useLanguage()\n  useEffect(() => {\n    dispatch(trigger(currentLanguage))\n  }, [dispatch, currentLanguage])\n\n  return (\n    <Switch>\n      {paths.map((route: TRoute) => {\n        if (route.private) {\n          return (\n            <PrivateRoute\n              exact={route?.notExact ? false : true}\n              component={route.component}\n              path={process.env.PUBLIC_URL + route.path}\n            />\n          )\n        }\n        return (\n          <Route\n            exact={route?.notExact ? false : true}\n            path={process.env.PUBLIC_URL + route.path}\n            component={route.component}\n            key={route.path}\n          />\n        )\n      })}\n    </Switch>\n  )\n}\n\nexport default RouterContainer\n","import { TState } from 'types/auth'\nimport { TAction } from 'types/storage'\n\n// ACTION TYPES\nexport const Types = {}\n\n// INITIAL STATE\nconst initialState: TState = {\n  user: {},\n}\n\n// REDUCER\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TAction, TStore } from 'types/storage'\nimport { EGlobalActions } from 'enums/actions'\n// Reducers\nimport auth from './auth'\nimport layout from './layout'\nimport home from './home'\nimport about from './about'\nimport skills from './skills'\nimport notFound from './notFound'\n\nconst appReducer = combineReducers<TStore | undefined, TAction>({\n  auth,\n  layout,\n  home,\n  about,\n  skills,\n  notFound,\n})\n\nexport default (state: TStore, action: TAction) => {\n  if (action.type === EGlobalActions.RESET) {\n    return appReducer(undefined, action)\n  }\n  return appReducer(state, action)\n}\n","export default function* authSaga() {}\n","import axios, { AxiosInstance } from 'axios'\n\nconst api: AxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_MAIN_URL,\n  timeout: 5000,\n})\n\nexport default api\n","import API from 'services/API'\nimport { TState as TLayoutState } from 'types/layout'\n\nexport const getLayout = async (\n  currentLanguage: string\n): Promise<TLayoutState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n      query {\n        layout {\n          header {\n            link {\n              url\n              label: label_${currentLanguage}\n            }\n            language {\n              value\n              label: label_${currentLanguage}\n            }\n          }\n          footer {\n            contact_email\n            socials {\n              url\n              label\n            }\n          }\n        }\n      }\n      `,\n    })\n    return data.data.layout\n  } catch (error) {\n    return\n  }\n}\n","import { all, takeLatest, put, call } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from 'storage/ducks/layout'\nimport { getLayout } from 'services/Layout'\nimport { TAction } from 'types/storage'\n\nfunction* getLayoutContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const response = yield call(getLayout, currentLanguage)\n    if (response) {\n      yield put(success(response))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* layoutSaga() {\n  yield all([takeLatest(Types.TRIGGER, getLayoutContent)])\n}\n","import API from 'services/API'\nimport { TState as THomeState } from 'types/home'\n\nexport const getHomeContent = async (\n  currentLanguage: string\n): Promise<THomeState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          home {\n            top_message: top_message_${currentLanguage}\n            bottom_message: bottom_message_${currentLanguage}\n            qualities {\n              value: value_${currentLanguage}\n            }\n          }\n        }\n      `,\n    })\n    return data.data.home\n  } catch (error) {\n    return\n  }\n}\n","import { all, call, takeLatest, put } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from '../ducks/home'\nimport { getHomeContent } from 'services/Home'\nimport { TAction } from 'types/storage'\n\nfunction* loadHomeContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getHomeContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* homeSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadHomeContent)])\n}\n","import API from 'services/API'\nimport { TState as TAboutState } from 'types/about'\n\nexport const getAboutContent = async (\n  currentLanguage: string\n): Promise<TAboutState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          about {\n            section_title: section_title_${currentLanguage}\n            title\n            description: description_${currentLanguage}\n            greeting: greeting_${currentLanguage}\n            picture {\n              url\n            }\n          }\n        }\n      `,\n    })\n    return data.data.about\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, put, takeLatest } from 'redux-saga/effects'\nimport { Types, request, success, fulfill } from '../ducks/about'\nimport { getAboutContent } from 'services/About'\nimport { TAction } from 'types/storage'\n\nfunction* loadAboutContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getAboutContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* aboutSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadAboutContent)])\n}\n","import API from 'services/API'\nimport { TState as TSkillsState } from 'types/skills'\n\nexport const getSkillsContent = async (\n  currentLanguage: string\n): Promise<TSkillsState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          skill {\n            section_title: section_title_${currentLanguage}\n            sections {\n              title: title_${currentLanguage}\n              description: description_${currentLanguage}\n              tools_title: tools_title_${currentLanguage}\n              tools {\n                value: value_${currentLanguage}\n                note: note_${currentLanguage}\n              }\n              part{\n                title: title_${currentLanguage}\n                description: description_${currentLanguage}\n              }\n            }\n          }\n        }\n      `,\n    })\n    return data.data.skill\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, takeLatest, put } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from '../ducks/skills'\nimport { getSkillsContent } from 'services/Skills'\nimport { TAction } from 'types/storage'\n\nfunction* loadSkillsContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getSkillsContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* skillsSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadSkillsContent)])\n}\n","import API from 'services/API'\nimport { TState as TNotFoundState } from 'types/notFound'\n\nexport const getNotFoundContent = async (\n  currentLanguage: string\n): Promise<TNotFoundState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          notFound {\n            title: title_${currentLanguage}\n            subtitle: subtitle_${currentLanguage}\n            message: message_${currentLanguage}\n            url_label: url_label_${currentLanguage}\n          }\n        }\n      `,\n    })\n    return data.data.notFound\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, put, takeLatest } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from 'storage/ducks/notFound'\nimport { TAction } from 'types/storage'\nimport { getNotFoundContent } from 'services/NotFound'\n\nfunction* loadNotFoundContent(action: TAction) {\n  yield put(request())\n  try {\n    const { currentLanguage } = action.payload\n    const data = yield call(getNotFoundContent, currentLanguage)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* notFoundSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadNotFoundContent)])\n}\n","import { all, fork } from 'redux-saga/effects'\n\n// Sagas\nimport authSaga from './auth'\nimport layoutSaga from './layout'\nimport homeSaga from './home'\nimport aboutSaga from './about'\nimport skillsSaga from './skills'\nimport notFoundSaga from './notFound'\n\nexport default function* rootSaga() {\n  yield all([\n    fork(authSaga),\n    fork(layoutSaga),\n    fork(homeSaga),\n    fork(aboutSaga),\n    fork(skillsSaga),\n    fork(notFoundSaga),\n  ])\n}\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport createSagaMiddleware, { SagaMiddleware } from 'redux-saga'\nimport ReduxDucks from './ducks'\nimport rootSaga from './saga'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\n  }\n}\n\nconst sagaMiddleware: SagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers: typeof compose =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore<any, any, any, any>(\n  ReduxDucks,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import { createGlobalStyle } from 'styled-components'\nimport { Theme } from './theme'\n\nconst StyledApp = createGlobalStyle<{ theme: Theme }>`\nbody {\n  margin: 0;\n  background-color: ${({ theme }) => theme.colors.background};\n  min-height: 100vh;\n  font-family: Nunito, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n  #root {\n    height: 100%;\n    overflow: hidden;\n    box-sizing: border-box;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  *{\n    box-sizing: border-box;\n  }\n`\nexport default StyledApp\n","const theme = {\n  colors: {\n    background: '#24213E',\n    text: '#D4D4D4',\n    primary: '#5E548E',\n    secondary: '#E4E4A8',\n    lightPrimary: '#322F4D',\n  },\n  fontSizes: {\n    sectionTitle: '4.0rem',\n    title: '2rem',\n    subtitle: '1.2rem',\n    text: '0.9rem',\n    small: '12px',\n  },\n  fontFamilies: {\n    nunito: 'Nunito Sans',\n    lato: 'Lato',\n  },\n}\n\nexport type Theme = typeof theme\nexport default theme\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { IconButton } from '@material-ui/core'\n\nexport const Container = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 20px;\n  height: 10vh;\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\ntype ButtonProps = {\n  active: string\n}\n\nexport const NavContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 30%;\n  min-width: 400px;\n`\n\nexport const NavLink = styled(Link)<ButtonProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 0px 20px;\n`\n\nexport const MenuButton = styled(IconButton)`\n  color: ${({ theme }) => theme.colors.secondary} !important;\n  position: absolute !important;\n  top: 10px;\n  right: 10px;\n  z-index: 3;\n`\n\ntype MenuContainerProps = {\n  open: boolean\n}\n\nexport const MenuOverlay = styled.div<MenuContainerProps>`\n  width: 100%;\n  z-index: ${({ open }) => (open ? 1 : -1)};\n  height: 107vh;\n  position: absolute !important;\n  background-color: rgba(17, 17, 17, 0.6);\n  opacity: ${({ open }) => (open ? 1 : 0)};\n  transition: all 0.5s ease-in-out;\n`\n\nexport const MenuContainer = styled.div<MenuContainerProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 50vh;\n  width: 85%;\n  z-index: 2;\n  background-color: ${({ theme }) => theme.colors.lightPrimary};\n  clip-path: circle(\n    ${({ open }) => (open ? '200% at 90% -10%' : '0 at 90% -10%')}\n  );\n  -webkit-clip-path: circle(\n    ${({ open }) => (open ? '200% at 90% -10%' : '0 at 90% -10%')}\n  );\n  transition: all 0.5s ease-in-out;\n`\nexport const MenuOption = styled(Link)<ButtonProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 10px;\n`\n\nexport const LanguageSelector = styled.select`\n  margin-left: 10px;\n  padding: 1px 5px;\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  option {\n    color: ${({ theme }) => theme.colors.primary};\n    background: transparent;\n    min-height: 20px;\n    padding: 0px 2px 1px;\n    border: none;\n    outline: 0px;\n  }\n`\n\nexport const LanguageSelectorContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const Separator = styled.div`\n  height: 1px;\n  width: 180px;\n  margin: 20px 0;\n  background-color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport const LanguageOption = styled.div<ButtonProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 10px;\n`\n","import React, { FC, useState } from 'react'\nimport {\n  MenuButton,\n  MenuContainer,\n  MenuOption,\n  Separator,\n  LanguageOption,\n  MenuOverlay,\n} from './styled'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { useLocation } from 'react-router-dom'\nimport { TLanguage, TLink } from 'types/layout'\n\ntype Props = {\n  options: Array<TLink>\n  languages: Array<TLanguage>\n  currentLanguage: string\n  setCurrentLanguage: (language: string) => void\n}\n\nconst ResponsiveMenu: FC<Props> = (props: Props) => {\n  const { options, languages, currentLanguage, setCurrentLanguage } = props\n  const [open, setOpen] = useState<boolean>(false)\n  const location = useLocation()\n\n  const handleClick = () => setOpen(false)\n\n  const handleLanguageClick = (language: string) => setCurrentLanguage(language)\n\n  return (\n    <>\n      <MenuButton onClick={() => setOpen((prevState: boolean) => !prevState)}>\n        <MenuIcon />\n      </MenuButton>\n      <MenuOverlay open={open} onClick={handleClick} />\n      <MenuContainer open={open}>\n        {options.map((option: TLink) => (\n          <MenuOption\n            onClick={handleClick}\n            key={option.label}\n            to={process.env.PUBLIC_URL + option.url}\n            active={\n              location.pathname === process.env.PUBLIC_URL + option.url\n                ? 'true'\n                : 'false'\n            }>\n            {option.label}\n          </MenuOption>\n        ))}\n        <Separator />\n        {languages.map((language: TLanguage) => (\n          <LanguageOption\n            key={language.value}\n            active={currentLanguage === language.value ? 'true' : 'false'}\n            onClick={() => handleLanguageClick(language.value)}>\n            {language.label}\n          </LanguageOption>\n        ))}\n      </MenuContainer>\n    </>\n  )\n}\n\nexport default ResponsiveMenu\n","import React, { FC } from 'react'\nimport {\n  Container,\n  NavLink,\n  NavContainer,\n  LanguageSelectorContainer,\n  LanguageSelector,\n} from './styled'\nimport { useLocation } from 'react-router-dom'\nimport { TLanguage, TLink } from 'types/layout'\nimport { MdLanguage } from 'react-icons/md'\nimport { useLanguage } from 'hooks/useLanguage'\n\ntype Props = {\n  options: Array<TLink>\n  languages: Array<TLanguage>\n}\n\nconst Navbar: FC<Props> = (props: Props) => {\n  const { options, languages } = props\n  const location = useLocation()\n  const { currentLanguage, setCurrentLanguage } = useLanguage()\n\n  const handleLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>) =>\n    setCurrentLanguage(e.target.value)\n\n  return (\n    <Container>\n      <NavContainer>\n        {options.map((option: TLink) => (\n          <NavLink\n            key={option.label}\n            to={process.env.PUBLIC_URL + option.url}\n            active={\n              location.pathname === process.env.PUBLIC_URL + option.url\n                ? 'true'\n                : 'false'\n            }>\n            {option.label}\n          </NavLink>\n        ))}\n      </NavContainer>\n      <LanguageSelectorContainer>\n        <MdLanguage size={18} color=\"#5E548E\" />\n        <LanguageSelector\n          value={currentLanguage}\n          onChange={handleLanguageChange}>\n          {languages.map((language) => (\n            <option key={language.value} value={language.value}>\n              {language.label}\n            </option>\n          ))}\n        </LanguageSelector>\n      </LanguageSelectorContainer>\n    </Container>\n  )\n}\n\nexport default Navbar\n","import React, { FC } from 'react'\nimport { useMediaQuery } from '@material-ui/core'\nimport ResponsiveMenu from './ResponsiveMenu'\nimport Navbar from './Navbar'\nimport { useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TLayoutState } from 'types/layout'\nimport { useLanguage } from 'hooks/useLanguage'\n\nconst Header: FC = () => {\n  const { header } = useSelector<TStore, TLayoutState>((state) => state.layout)\n  const { currentLanguage, setCurrentLanguage } = useLanguage()\n  const matches = useMediaQuery('(max-width: 570px)')\n\n  return matches ? (\n    <ResponsiveMenu\n      options={header.link}\n      languages={header.language}\n      currentLanguage={currentLanguage}\n      setCurrentLanguage={setCurrentLanguage}\n    />\n  ) : (\n    <Navbar options={header.link} languages={header.language} />\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 50px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.lightPrimary};\n  padding: 0 20px;\n`\n\ntype TextProps = {\n  alignSelf?: boolean\n}\n\nexport const Text = styled.p<TextProps>`\n  color: ${({ theme }) => theme.colors.text};\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  margin-right: ${({ alignSelf }) => (alignSelf ? '60px' : 0)};\n`\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100px;\n  align-items: center;\n`\n\nexport const Link = styled.a`\n  display: flex;\n  justify-content: center;\n`\n","import React from 'react'\nimport { Container, Text, IconsContainer, Link } from './styled'\nimport { AiFillGithub, AiOutlineWhatsApp, AiFillLinkedin } from 'react-icons/ai'\nimport { useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TLayoutState, TSocial } from 'types/layout'\n\nconst Footer = () => {\n  const { footer } = useSelector<TStore, TLayoutState>((state) => state.layout)\n\n  const _renderIcon = (social: string) => {\n    switch (social) {\n      case 'github':\n        return <AiFillGithub size={22} color=\"#D4D4D4\" />\n      case 'linkedin':\n        return <AiFillLinkedin size={22} color=\"#D4D4D4\" />\n      case 'whatsapp':\n        return <AiOutlineWhatsApp size={22} color=\"#D4D4D4\" />\n      default:\n        break\n    }\n  }\n\n  return (\n    <Container>\n      <Text>{footer.contact_email}</Text>\n      <IconsContainer>\n        {footer.socials.map((social: TSocial) => (\n          <Link key={social.label} href={social.url} target=\"blank\">\n            {_renderIcon(social.label)}\n          </Link>\n        ))}\n      </IconsContainer>\n    </Container>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport './App.css'\nimport 'assets/styles.css'\nimport Routes from './routes'\nimport { Provider } from 'react-redux'\nimport store from './storage'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalTheme from 'utils/GlobalTheme'\nimport theme from 'utils/theme'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Header from 'components/Header'\nimport Footer from 'components/Footer'\nimport { LanguageProvider } from 'hooks/useLanguage'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <LanguageProvider>\n          <GlobalTheme />\n          <Router>\n            <Header />\n            <Routes />\n          </Router>\n          <Footer />\n        </LanguageProvider>\n      </ThemeProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}