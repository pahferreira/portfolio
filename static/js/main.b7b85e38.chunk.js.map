{"version":3,"sources":["utils/PrivateRoute.tsx","views/Home/styled.ts","storage/ducks/home.ts","views/Home/index.tsx","views/NotFound/styled.ts","views/NotFound/index.tsx","views/Skills/styled.ts","components/Container/index.tsx","components/Content/index.tsx","components/SectionTitle/index.tsx","components/FadeAnimation/index.tsx","storage/ducks/skills.ts","components/Title/index.tsx","components/Subtitle/index.tsx","components/Text/index.tsx","components/Note/index.tsx","views/Skills/Section.tsx","views/Skills/index.tsx","views/About/styled.ts","enums/actions.ts","views/About/Desktop.tsx","views/About/Mobile.tsx","storage/ducks/about.ts","routes/paths.ts","views/About/index.tsx","storage/ducks/layout.ts","routes/index.tsx","storage/ducks/auth.ts","storage/ducks/index.ts","storage/saga/auth.ts","services/API.ts","services/Layout/index.ts","storage/saga/layout.ts","services/Home/index.ts","storage/saga/home.ts","services/About/index.ts","storage/saga/about.ts","services/Skills/index.ts","storage/saga/skills.ts","storage/saga/index.ts","storage/index.ts","utils/GlobalTheme.ts","utils/theme.ts","components/Header/styled.ts","components/Header/ResponsiveMenu.tsx","components/Header/Navbar.tsx","components/Header/index.tsx","components/Footer/styled.ts","components/Footer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PrivateRoute","exact","Component","component","path","localStorage","getItem","to","Container","styled","div","Cursor","span","theme","colors","secondary","keyframes","background","Title","p","fontFamilies","nunito","fontSizes","sectionTitle","title","Subtitle","lato","subtitle","text","Types","initialState","top_message","bottom_message","qualities","sleep","milliseconds","Promise","resolve","setTimeout","Home","useState","activeWordIndex","setActiveWordIndex","wordToShow","setwordToShow","isTyping","setIsTyping","words","setWords","dispatch","useDispatch","home","useSelector","state","useEffect","type","map","quality","value","typeAndErase","useCallback","a","word","i","prevState","length","slice","typing","BackLink","Link","NotFound","SectionsContainer","Content","SectionTitle","lightPrimary","FadeAnimation","children","activateAnimation","CSSTransition","in","classNames","timeout","unmountOnExit","section_title","sections","textTransform","Text","align","Note","small","IdeaAndPlanning","props","section","description","part","tools_title","tools","tool","index","key","note","Skills","triggerAnimation","setTriggerAnimation","skills","Section","EGlobalActions","AboutContent","primary","Image","image","MobileSection","MobileHeader","MobileImage","MobileLabelContainer","MobileAbountContent","Desktop","greeting","triggerSecondAnimation","setTriggerSecondAnimation","onEntered","picture","url","paths","matches","useMediaQuery","about","Mobile","notExact","header","link","language","footer","contact_email","socials","RouterContainer","route","private","process","user","appReducer","combineReducers","auth","action","layout","loading","payload","authSaga","api","axios","create","baseURL","getLayout","API","post","query","data","getLayoutContent","layoutSaga","put","call","response","all","takeLatest","getHomeContent","loadHomeContent","homeSaga","getAboutContent","loadAboutContent","aboutSaga","getSkillsContent","skill","loadSkillsContent","skillsSaga","rootSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","RESET","undefined","applyMiddleware","run","StyledApp","createGlobalStyle","NavLink","active","MenuButton","IconButton","MenuContainer","open","MenuOption","ResponsiveMenu","options","setOpen","location","useLocation","onClick","option","label","pathname","Navbar","Header","alignSelf","IconsContainer","Footer","social","href","target","size","color","_renderIcon","App","GlobalTheme","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b7b85e38.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\ninterface Props {\n  exact?: boolean\n  component: React.FunctionComponent\n  path: string\n}\n\nconst PrivateRoute = ({ exact, component: Component, path }: Props) => {\n  const token = localStorage.getItem('access_token')\n\n  const renderComponent = () => {\n    if (token) {\n      return (\n        <Route\n          exact={exact ? exact : false}\n          path={path}\n          component={Component}\n        />\n      )\n    }\n    return <Redirect to=\"/\" />\n  }\n\n  return renderComponent()\n}\n\nexport default PrivateRoute\n","import styled, { keyframes } from 'styled-components'\nimport { Theme } from 'utils/theme'\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nconst blink = ({ theme }: { theme: Theme }) => keyframes`\n  0% { background-color: ${theme.colors.secondary} }\n  49% { background-color: ${theme.colors.secondary} }\n  50% { background-color: ${theme.colors.background} }\n  99% { background-color: ${theme.colors.background} }\n  100% { background-color: ${theme.colors.secondary} }\n`\n\ntype CursorProps = {\n  typing?: boolean\n}\n\nexport const Cursor = styled.span<CursorProps>`\n  display: inline-block;\n  width: 3px;\n  height: 100%;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  margin-left: 5px;\n  animation: ${blink} 1s infinite;\n`\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.title};\n  }\n`\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n`\n","import { TState } from 'types/home'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'HOME/TRIGGER',\n  REQUEST: 'HOME/REQUEST',\n  SUCCESS: 'HOME/SUCCESS',\n  FULFILL: 'HOME/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  top_message: '',\n  bottom_message: '',\n  qualities: [],\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = () => {\n  return {\n    type: Types.TRIGGER,\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { FC, useState, useEffect, useCallback } from 'react'\nimport { Container, Cursor, Title, Subtitle } from './styled'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as THomeState } from 'types/home'\nimport { trigger } from 'storage/ducks/home'\n\nconst TYPING_DELAY = 150\nconst ERASING_DELAY = 100\nconst START_TO_ERASE_DELAY = 1500\nconst NEXT_WORD = 1000\n\nconst sleep = (milliseconds: number) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds))\n}\n\nconst Home: FC = () => {\n  const [activeWordIndex, setActiveWordIndex] = useState<number>(0)\n  const [wordToShow, setwordToShow] = useState<string>('')\n  const [isTyping, setIsTyping] = useState(true)\n  const [words, setWords] = useState<Array<string>>([])\n  const dispatch = useDispatch()\n  const home = useSelector<TStore, THomeState>((state) => state.home)\n\n  useEffect(() => {\n    dispatch(trigger())\n  }, [dispatch])\n\n  useEffect(() => {\n    setWords(home.qualities.map((quality) => quality.value))\n  }, [home.qualities])\n\n  const typeAndErase = useCallback(\n    async (word: string = '') => {\n      // Typing\n      setIsTyping(true)\n      for (let i = 0; i < word.length; i++) {\n        await sleep(TYPING_DELAY)\n        setwordToShow((prevState) => prevState + word[i])\n      }\n      setIsTyping(false)\n      await sleep(START_TO_ERASE_DELAY)\n      setIsTyping(true)\n      // Erasing\n      for (let i = 0; i < word.length; i++) {\n        await sleep(ERASING_DELAY)\n        setwordToShow((prevState) => prevState.slice(0, prevState.length - 1))\n      }\n      // Next Word\n      setIsTyping(false)\n      await sleep(NEXT_WORD)\n      setActiveWordIndex((activeWordIndex + 1) % words.length)\n    },\n    [words, activeWordIndex]\n  )\n\n  useEffect(() => {\n    typeAndErase(words[activeWordIndex])\n  }, [activeWordIndex, typeAndErase, words])\n\n  return (\n    <Container>\n      <Subtitle>{home.top_message}</Subtitle>\n      <Title>\n        {wordToShow}\n        <Cursor typing={isTyping}>&nbsp;</Cursor>\n      </Title>\n      <Subtitle>{home.bottom_message}</Subtitle>\n    </Container>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport const Title = styled.p`\n  margin: 5px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.title};\n  }\n`\n\nexport const Subtitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.text};\n`\nexport const BackLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-top: 20px;\n  text-decoration: underline;\n`\n","import React, { FC } from 'react'\nimport { Container, Title, Subtitle, BackLink } from './styled'\n\nconst NotFound: FC = () => {\n  return (\n    <Container>\n      <Title>Page not Found!</Title>\n      <Subtitle>Dammit!</Subtitle>\n      <Subtitle>I swear to God it worked on my machine.</Subtitle>\n      <BackLink to=\"/portfolio\">Back to homepage</BackLink>\n    </Container>\n  )\n}\n\nexport default NotFound\n","import styled from 'styled-components'\n\nexport const SectionsContainer = styled.div`\n  min-height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n  }\n`\n\nexport const Container = styled.div`\n  width: 33%;\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  @media screen and (max-width: 960px) {\n    width: 100%;\n    align-self: center;\n  }\n  @media screen and (max-width: 475px) {\n    width: 100%;\n    align-self: flex-start;\n  }\n`\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  @media screen and (max-width: 960px) {\n    padding: 8% 0 5% 0;\n  }\n  @media screen and (max-width: 768px) {\n    padding: 11% 0 5% 0;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst Content = styled.div`\n  min-height: 80vh;\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  @media screen and (max-width: 960px) {\n    min-height: 90vh;\n  }\n`\n\nexport default Content\n","import styled from 'styled-components'\n\nconst SectionTitle = styled.p`\n  margin: 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.sectionTitle};\n  color: ${({ theme }) => theme.colors.lightPrimary};\n  text-transform: uppercase;\n  @media screen and (max-width: 400px) {\n    font-size: 3rem;\n  }\n`\n\nexport default SectionTitle\n","import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\ntype Props = {\n  children: JSX.Element | Array<JSX.Element>\n  activateAnimation: boolean\n}\n\nconst FadeAnimation = ({ children, activateAnimation }: Props) => (\n  <CSSTransition\n    in={activateAnimation}\n    classNames=\"fade\"\n    timeout={500}\n    unmountOnExit>\n    {children}\n  </CSSTransition>\n)\n\nexport default FadeAnimation\n","import { TAction } from 'types/storage'\nimport { TState } from 'types/skills'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'SKILLS/TRIGGER',\n  REQUEST: 'SKILLS/REQUEST',\n  SUCCESS: 'SKILLS/SUCCESS',\n  FULFILL: 'SKILLS/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  section_title: '',\n  sections: [],\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = () => {\n  return {\n    type: Types.TRIGGER,\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import styled from 'styled-components'\n\ntype TitleProps = {\n  textTransform?: string\n}\n\nconst Title = styled.p<TitleProps>`\n  margin: 10px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: ${({ textTransform }) =>\n    textTransform ? textTransform : 'none'};\n  text-align: center;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n    font-size: 2.5rem;\n    line-height: 3rem;\n  }\n  @media screen and (max-width: 400px) {\n    text-align: left;\n    font-size: 2rem;\n    line-height: 3rem;\n  }\n`\n\nexport default Title\n","import styled from 'styled-components'\n\nconst Subtitle = styled.p`\n  margin: 15px 0;\n  font-family: ${({ theme }) => theme.fontFamilies.nunito};\n  font-size: ${({ theme }) => theme.fontSizes.subtitle};\n  color: ${({ theme }) => theme.colors.secondary};\n  text-transform: uppercase;\n  text-align: center;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Subtitle\n","import styled from 'styled-components'\n\ntype TextProps = {\n  align?: string\n}\n\nconst Text = styled.p<TextProps>`\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: ${({ align }) => (align ? align : 'center')};\n  margin: 2px 0;\n  letter-spacing: 1px;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Text\n","import styled from 'styled-components'\n\nconst Note = styled.p`\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n  margin: 0;\n  @media screen and (max-width: 475px) {\n    text-align: left;\n  }\n`\n\nexport default Note\n","import React, { FC } from 'react'\nimport { Container } from './styled'\nimport Title from 'components/Title'\nimport Subtitle from 'components/Subtitle'\nimport Text from 'components/Text'\nimport Note from 'components/Note'\nimport { TSection, TTool } from 'types/skills'\n\ntype Props = {\n  section: TSection\n}\n\nconst IdeaAndPlanning: FC<Props> = (props: Props) => {\n  const { section } = props\n\n  return (\n    <Container>\n      <Title textTransform=\"uppercase\">{section.title}</Title>\n      <Text>{section.description}</Text>\n      <Subtitle>{section.part.title}</Subtitle>\n      <Text>{section.part.description}</Text>\n      <Subtitle>{section.tools_title}</Subtitle>\n      {section.tools.map((tool: TTool, index: number) => (\n        <>\n          <Text key={index}>{tool.value}</Text>\n          {tool.note && <Note>(Always with it for insights)</Note>}\n        </>\n      ))}\n    </Container>\n  )\n}\n\nexport default IdeaAndPlanning\n","import React, { FC, useState, useEffect } from 'react'\nimport { SectionsContainer } from './styled'\nimport Container from 'components/Container'\nimport Content from 'components/Content'\nimport SectionTitle from 'components/SectionTitle'\nimport FadeAnimation from 'components/FadeAnimation'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TSkillsState } from 'types/skills'\nimport { trigger } from 'storage/ducks/skills'\nimport Section from './Section'\n\nconst Skills: FC = () => {\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n  const dispatch = useDispatch()\n  const skills = useSelector<TStore, TSkillsState>((state) => state.skills)\n\n  useEffect(() => {\n    dispatch(trigger())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (skills.sections.length > 0) {\n      setTriggerAnimation(true)\n    }\n  }, [skills.sections])\n\n  return (\n    <>\n      <Container>\n        <Content>\n          <SectionTitle>{skills.section_title}</SectionTitle>\n          <FadeAnimation activateAnimation={triggerAnimation}>\n            <SectionsContainer>\n              {skills.sections.map((section, index) => (\n                <Section section={section} key={index} />\n              ))}\n            </SectionsContainer>\n          </FadeAnimation>\n        </Content>\n      </Container>\n    </>\n  )\n}\n\nexport default Skills\n","import styled from 'styled-components'\n\nexport const Section = styled.div`\n  height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`\n\nexport const AboutContent = styled.div`\n  width: 55%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background-color: ${({ theme }) => theme.colors.primary};\n  height: 90%;\n  padding: 20px 30px;\n  position: absolute;\n  z-index: 1;\n  @media screen and (max-width: 1024px) {\n    width: 60%;\n  }\n`\n\ntype ImageProps = {\n  image: string\n}\n\nexport const Image = styled.div<ImageProps>`\n  width: 52.5%;\n  height: 434px;\n  background-image: ${({ image }) => `url(${image})`};\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: relative;\n  left: 50%;\n`\n\nexport const MobileSection = styled.div`\n  height: 70%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (max-width: 475px) {\n    align-items: flex-start;\n  }\n`\n\nexport const MobileHeader = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (max-width: 475px) {\n    flex-direction: row;\n    width: 98%;\n    margin-top: 40px;\n  }\n`\n\nexport const MobileImage = styled.div<ImageProps>`\n  width: 200px;\n  height: 200px;\n  background-image: ${({ image }) => `url(${image})`};\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 300px;\n  border: 2px solid ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 22px;\n  @media screen and (max-width: 475px) {\n    width: 50%;\n    margin-right: 10%;\n  }\n  @media screen and (max-width: 400px) {\n    width: 130px;\n    height: 130px;\n    margin-right: 5%;\n  }\n`\n\nexport const MobileLabelContainer = styled.div`\n  width: 45%;\n`\n\nexport const MobileAbountContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 90%;\n  padding: 20px 30px;\n  @media screen and (max-width: 475px) {\n    padding: 20px 0;\n  }\n`\n","export enum EGlobalActions {\n  RESET = 'GLOBAL/RESET'\n}\n","import React, { FC, useEffect, useState } from 'react'\nimport Text from 'components/Text'\nimport Title from 'components/Title'\nimport { Section, Image, AboutContent } from './styled'\nimport { CSSTransition } from 'react-transition-group'\n\ntype Props = {\n  greeting: string\n  description: string\n  title: string\n  image: string\n}\n\nconst Desktop: FC<Props> = (props: Props) => {\n  const { greeting, description, title, image } = props\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n  const [triggerSecondAnimation, setTriggerSecondAnimation] = useState(false)\n\n  useEffect(() => {\n    setTriggerAnimation(true)\n  }, [])\n\n  return (\n    <Section>\n      <CSSTransition\n        in={triggerSecondAnimation}\n        classNames=\"appear-box\"\n        timeout={1000}\n        unmountOnExit>\n        <AboutContent>\n          <Text>{greeting}</Text>\n          <Title>{title},</Title>\n          <Text align=\"left\">{description}</Text>\n        </AboutContent>\n      </CSSTransition>\n      <CSSTransition\n        in={triggerAnimation}\n        classNames=\"appear\"\n        timeout={500}\n        unmountOnExit\n        onEntered={() => setTriggerSecondAnimation(true)}>\n        <Image image={image} />\n      </CSSTransition>\n    </Section>\n  )\n}\n\nexport default Desktop\n","import React, { FC, useState, useEffect } from 'react'\nimport Text from 'components/Text'\nimport Title from 'components/Title'\nimport FadeAnimation from 'components/FadeAnimation'\nimport {\n  MobileSection,\n  MobileImage,\n  MobileHeader,\n  MobileAbountContent,\n  MobileLabelContainer,\n} from './styled'\n\ntype Props = {\n  greeting: string\n  description: string\n  title: string\n  image: string\n}\n\nconst Desktop: FC<Props> = (props: Props) => {\n  const { greeting, description, title, image } = props\n  const [triggerAnimation, setTriggerAnimation] = useState(false)\n\n  useEffect(() => {\n    setTriggerAnimation(true)\n  }, [])\n\n  return (\n    <FadeAnimation activateAnimation={triggerAnimation}>\n      <MobileSection>\n        <MobileHeader>\n          <MobileImage image={image} />\n          <MobileLabelContainer>\n            <Text>{greeting}</Text>\n            <Title>{title},</Title>\n          </MobileLabelContainer>\n        </MobileHeader>\n        <MobileAbountContent>\n          <Text>{description}</Text>\n        </MobileAbountContent>\n      </MobileSection>\n    </FadeAnimation>\n  )\n}\n\nexport default Desktop\n","import { TAction } from 'types/storage'\nimport { TState } from 'types/about'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'ABOUT/TRIGGER',\n  REQUEST: 'ABOUT/REQUEST',\n  SUCCESS: 'ABOUT/SUCCESS',\n  FULFILL: 'ABOUT/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  section_title: '',\n  title: '',\n  greeting: '',\n  description: '',\n  picture: {\n    url: '',\n  },\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = () => {\n  return {\n    type: Types.TRIGGER,\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import Home from 'views/Home'\nimport NotFound from 'views/NotFound'\nimport Skills from 'views/Skills'\nimport About from 'views/About'\n\nconst paths = [\n  {\n    path: '/',\n    component: Home,\n  },\n  {\n    path: '/skills',\n    component: Skills,\n  },\n  {\n    path: '/about',\n    component: About,\n  },\n  {\n    path: '*',\n    component: NotFound,\n    notExact: true,\n  },\n]\n\nexport default paths\n","import React, { FC, useEffect } from 'react'\nimport Container from 'components/Container'\nimport Content from 'components/Content'\nimport SectionTitle from 'components/SectionTitle'\nimport { useMediaQuery } from '@material-ui/core'\nimport Desktop from './Desktop'\nimport Mobile from './Mobile'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TState as TAboutState } from 'types/about'\nimport { TStore } from 'types/storage'\nimport { trigger } from 'storage/ducks/about'\n\nconst About: FC = () => {\n  const matches = useMediaQuery('(max-width: 960px)')\n  const dispatch = useDispatch()\n  const about = useSelector<TStore, TAboutState>((state) => state.about)\n\n  useEffect(() => {\n    dispatch(trigger())\n  }, [dispatch])\n\n  return (\n    <>\n      <Container>\n        <Content>\n          <SectionTitle>{about.section_title}</SectionTitle>\n          {matches ? (\n            <Mobile\n              greeting={about.greeting}\n              title={about.title}\n              description={about.description}\n              image={about.picture.url}\n            />\n          ) : (\n            <Desktop\n              greeting={about.greeting}\n              title={about.title}\n              description={about.description}\n              image={about.picture.url}\n            />\n          )}\n        </Content>\n      </Container>\n    </>\n  )\n}\n\nexport default About\n","import { TState } from 'types/layout'\nimport { TAction } from 'types/storage'\n\n// Action Types\nexport const Types = {\n  TRIGGER: 'LAYOUT/TRIGGER',\n  REQUEST: 'LAYOUT/REQUEST',\n  SUCCESS: 'LAYOUT/SUCCESS',\n  FULFILL: 'LAYOUT/FULFILL',\n}\n\n// Initial State\nconst initialState: TState = {\n  header: {\n    link: [],\n    language: [],\n  },\n  footer: {\n    contact_email: '',\n    socials: [],\n  },\n}\n\n// Reducer\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case Types.REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case Types.FULFILL:\n      return {\n        ...state,\n        loading: false,\n      }\n    case Types.SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Actions\nexport const trigger = () => {\n  return {\n    type: Types.TRIGGER,\n  }\n}\n\nexport const request = () => {\n  return {\n    type: Types.REQUEST,\n  }\n}\n\nexport const fulfill = () => {\n  return {\n    type: Types.FULFILL,\n  }\n}\n\nexport const success = (payload: any) => {\n  return {\n    type: Types.SUCCESS,\n    payload,\n  }\n}\n","import React, { FC, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport PrivateRoute from 'utils/PrivateRoute'\nimport paths from './paths'\nimport TRoute from 'types/router'\nimport { trigger } from 'storage/ducks/layout'\nimport { useDispatch } from 'react-redux'\n\nconst RouterContainer: FC = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(trigger())\n  }, [dispatch])\n\n  return (\n    <Switch>\n      {paths.map((route: TRoute) => {\n        if (route.private) {\n          return (\n            <PrivateRoute\n              exact={route?.notExact ? false : true}\n              component={route.component}\n              path={process.env.PUBLIC_URL + route.path}\n            />\n          )\n        }\n        return (\n          <Route\n            exact={route?.notExact ? false : true}\n            path={process.env.PUBLIC_URL + route.path}\n            component={route.component}\n            key={route.path}\n          />\n        )\n      })}\n    </Switch>\n  )\n}\n\nexport default RouterContainer\n","import { TState } from 'types/auth'\nimport { TAction } from 'types/storage'\n\n// ACTION TYPES\nexport const Types = {}\n\n// INITIAL STATE\nconst initialState: TState = {\n  user: {},\n}\n\n// REDUCER\nexport default (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TAction, TStore } from 'types/storage'\nimport { EGlobalActions } from 'enums/actions'\n// Reducers\nimport auth from './auth'\nimport layout from './layout'\nimport home from './home'\nimport about from './about'\nimport skills from './skills'\n\nconst appReducer = combineReducers<TStore | undefined, TAction>({\n  auth,\n  layout,\n  home,\n  about,\n  skills,\n})\n\nexport default (state: TStore, action: TAction) => {\n  if (action.type === EGlobalActions.RESET) {\n    return appReducer(undefined, action)\n  }\n  return appReducer(state, action)\n}\n","export default function* authSaga() {}\n","import axios, { AxiosInstance } from 'axios'\n\nconst api: AxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_MAIN_URL,\n  timeout: 5000,\n})\n\nexport default api\n","import API from 'services/API'\nimport { TState as TLayoutState } from 'types/layout'\n\nexport const getLayout = async (): Promise<TLayoutState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n      query {\n        layout {\n          header {\n            link {\n              url\n              label: label_pt\n            }\n            language {\n              value\n              label: label_pt\n            }\n          }\n          footer {\n            contact_email\n            socials {\n              url\n              label\n            }\n          }\n        }\n      }\n      `,\n    })\n    return data.data.layout\n  } catch (error) {\n    return\n  }\n}\n","import { all, takeLatest, put, call } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from 'storage/ducks/layout'\nimport { getLayout } from 'services/Layout'\n\nfunction* getLayoutContent() {\n  yield put(request())\n  try {\n    const response = yield call(getLayout)\n    if (response) {\n      yield put(success(response))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* layoutSaga() {\n  yield all([takeLatest(Types.TRIGGER, getLayoutContent)])\n}\n","import API from 'services/API'\nimport { TState as THomeState } from 'types/home'\n\nexport const getHomeContent = async (): Promise<THomeState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          home {\n            top_message: top_message_pt\n            bottom_message: bottom_message_pt\n            qualities {\n              value: value_pt\n            }\n          }\n        }\n      `,\n    })\n    return data.data.home\n  } catch (error) {\n    return\n  }\n}\n","import { all, call, takeLatest, put } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from '../ducks/home'\nimport { getHomeContent } from 'services/Home'\n\nfunction* loadHomeContent() {\n  yield put(request())\n  try {\n    const data = yield call(getHomeContent)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* homeSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadHomeContent)])\n}\n","import API from 'services/API'\nimport { TState as TAboutState } from 'types/about'\n\nexport const getAboutContent = async (): Promise<TAboutState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          about {\n            section_title: section_title_pt\n            title\n            description: description_pt\n            greeting: greeting_pt\n            picture {\n              url\n            }\n          }\n        }\n      `,\n    })\n    return data.data.about\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, put, takeLatest } from 'redux-saga/effects'\nimport { Types, request, success, fulfill } from '../ducks/about'\nimport { getAboutContent } from 'services/About'\n\nfunction* loadAboutContent() {\n  yield put(request())\n  try {\n    const data = yield call(getAboutContent)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* aboutSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadAboutContent)])\n}\n","import API from 'services/API'\nimport { TState as TSkillsState } from 'types/skills'\n\nexport const getSkillsContent = async (): Promise<TSkillsState | undefined> => {\n  try {\n    const { data } = await API.post('/graphql', {\n      query: `\n        query {\n          skill {\n            section_title: section_title_pt\n            sections {\n              title: title_pt\n              description: description_pt\n              tools_title: tools_title_pt\n              tools {\n                value: value_pt\n                note: note_pt\n              }\n              part{\n                title: title_pt\n                description: description_pt\n              }\n            }\n          }\n        }\n      `,\n    })\n    return data.data.skill\n  } catch (error) {\n    return\n  }\n}\n","import { call, all, takeLatest, put } from 'redux-saga/effects'\nimport { Types, request, fulfill, success } from '../ducks/skills'\nimport { getSkillsContent } from 'services/Skills'\n\nfunction* loadSkillsContent() {\n  yield put(request())\n  try {\n    const data = yield call(getSkillsContent)\n    if (data) {\n      yield put(success(data))\n    }\n  } catch (error) {\n  } finally {\n    yield put(fulfill())\n  }\n}\n\nexport default function* skillsSaga() {\n  yield all([takeLatest(Types.TRIGGER, loadSkillsContent)])\n}\n","import { all, fork } from 'redux-saga/effects'\n\n// Sagas\nimport authSaga from './auth'\nimport layoutSaga from './layout'\nimport homeSaga from './home'\nimport aboutSaga from './about'\nimport skillsSaga from './skills'\n\nexport default function* rootSaga() {\n  yield all([\n    fork(authSaga),\n    fork(layoutSaga),\n    fork(homeSaga),\n    fork(aboutSaga),\n    fork(skillsSaga),\n  ])\n}\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport createSagaMiddleware, { SagaMiddleware } from 'redux-saga'\nimport ReduxDucks from './ducks'\nimport rootSaga from './saga'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\n  }\n}\n\nconst sagaMiddleware: SagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers: typeof compose =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore<any, any, any, any>(\n  ReduxDucks,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import { createGlobalStyle } from 'styled-components'\nimport { Theme } from './theme'\n\nconst StyledApp = createGlobalStyle<{ theme: Theme }>`\nbody {\n  margin: 0;\n  background-color: ${({ theme }) => theme.colors.background};\n  min-height: 100vh;\n  font-family: Nunito, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n  #root {\n    height: 100%;\n    overflow: hidden;\n    box-sizing: border-box;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  *{\n    box-sizing: border-box;\n  }\n`\nexport default StyledApp\n","const theme = {\n  colors: {\n    background: '#24213E',\n    text: '#D4D4D4',\n    primary: '#5E548E',\n    secondary: '#E4E4A8',\n    lightPrimary: '#322F4D',\n  },\n  fontSizes: {\n    sectionTitle: '4.0rem',\n    title: '2rem',\n    subtitle: '1.2rem',\n    text: '0.9rem',\n    small: '12px',\n  },\n  fontFamilies: {\n    nunito: 'Nunito Sans',\n    lato: 'Lato',\n  },\n}\n\nexport type Theme = typeof theme\nexport default theme\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { IconButton } from '@material-ui/core'\n\nexport const Container = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 20px;\n  height: 10vh;\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\ntype NavLinkProps = {\n  active: string\n}\n\nexport const NavLink = styled(Link)<NavLinkProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 0px 20px;\n`\n\nexport const MenuButton = styled(IconButton)`\n  color: ${({ theme }) => theme.colors.secondary} !important;\n  position: absolute !important;\n  top: 10px;\n  right: 10px;\n  z-index: 2;\n`\n\ntype MenuContainerProps = {\n  open: boolean\n}\n\nexport const MenuContainer = styled.div<MenuContainerProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 100vh;\n  width: 100%;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.colors.lightPrimary};\n  clip-path: circle(\n    ${({ open }) => (open ? '200% at 90% -10%' : '0 at 90% -10%')}\n  );\n  -webkit-clip-path: circle(\n    ${({ open }) => (open ? '200% at 90% -10%' : '0 at 90% -10%')}\n  );\n  transition: all 0.5s ease-in-out;\n`\nexport const MenuOption = styled(Link)<NavLinkProps>`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ active, theme }) =>\n    active === 'true' ? theme.colors.secondary : theme.colors.primary};\n  margin: 20px;\n`\n","import React, { FC, useState } from 'react'\nimport { MenuButton, MenuContainer, MenuOption } from './styled'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { useLocation } from 'react-router-dom'\n\ntype Option = {\n  url: string\n  label: string\n}\n\ntype Props = {\n  options: Array<Option>\n}\n\nconst ResponsiveMenu: FC<Props> = (props: Props) => {\n  const { options } = props\n  const [open, setOpen] = useState<boolean>(false)\n  const location = useLocation()\n\n  return (\n    <>\n      <MenuButton onClick={() => setOpen((prevState: boolean) => !prevState)}>\n        <MenuIcon />\n      </MenuButton>\n      <MenuContainer open={open}>\n        {options.map((option: Option) => (\n          <MenuOption\n            key={option.label}\n            to={option.url}\n            active={location.pathname === option.url ? 'true' : 'false'}>\n            {option.label}\n          </MenuOption>\n        ))}\n      </MenuContainer>\n    </>\n  )\n}\n\nexport default ResponsiveMenu\n","import React, { FC } from 'react'\nimport { Container, NavLink } from './styled'\nimport { useLocation } from 'react-router-dom'\n\ntype Option = {\n  url: string\n  label: string\n}\n\ntype Props = {\n  options: Array<Option>\n}\n\nconst Navbar: FC<Props> = (props: Props) => {\n  const { options } = props\n  const location = useLocation()\n\n  return (\n    <Container>\n      {options.map((option: Option) => (\n        <NavLink\n          key={option.label}\n          to={process.env.PUBLIC_URL + option.url}\n          active={\n            location.pathname === process.env.PUBLIC_URL + option.url\n              ? 'true'\n              : 'false'\n          }>\n          {option.label}\n        </NavLink>\n      ))}\n    </Container>\n  )\n}\n\nexport default Navbar\n","import React, { FC } from 'react'\nimport { useMediaQuery } from '@material-ui/core'\nimport ResponsiveMenu from './ResponsiveMenu'\nimport Navbar from './Navbar'\nimport { useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TLayoutState } from 'types/layout'\n\nconst Header: FC = () => {\n  const { header } = useSelector<TStore, TLayoutState>((state) => state.layout)\n  const matches = useMediaQuery('(max-width: 475px)')\n\n  return matches ? (\n    <ResponsiveMenu options={header.link} />\n  ) : (\n    <Navbar options={header.link} />\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 50px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.lightPrimary};\n  padding: 0 20px;\n`\n\ntype TextProps = {\n  alignSelf?: boolean\n}\n\nexport const Text = styled.p<TextProps>`\n  color: ${({ theme }) => theme.colors.text};\n  font-family: ${({ theme }) => theme.fontFamilies.lato};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  margin-right: ${({ alignSelf }) => (alignSelf ? '60px' : 0)};\n`\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100px;\n  align-items: center;\n`\n\nexport const Link = styled.a`\n  display: flex;\n  justify-content: center;\n`\n","import React from 'react'\nimport { Container, Text, IconsContainer, Link } from './styled'\nimport { AiFillGithub, AiOutlineWhatsApp, AiFillLinkedin } from 'react-icons/ai'\nimport { useSelector } from 'react-redux'\nimport { TStore } from 'types/storage'\nimport { TState as TLayoutState, TSocial } from 'types/layout'\n\nconst Footer = () => {\n  const { footer } = useSelector<TStore, TLayoutState>((state) => state.layout)\n\n  const _renderIcon = (social: string) => {\n    switch (social) {\n      case 'github':\n        return <AiFillGithub size={22} color=\"#D4D4D4\" />\n      case 'linkedin':\n        return <AiFillLinkedin size={22} color=\"#D4D4D4\" />\n      case 'whatsapp':\n        return <AiOutlineWhatsApp size={22} color=\"#D4D4D4\" />\n      default:\n        break\n    }\n  }\n\n  return (\n    <Container>\n      <Text>{footer.contact_email}</Text>\n      <IconsContainer>\n        {footer.socials.map((social: TSocial) => (\n          <Link key={social.label} href={social.url} target=\"blank\">\n            {_renderIcon(social.label)}\n          </Link>\n        ))}\n      </IconsContainer>\n    </Container>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport './App.css'\nimport 'assets/styles.css'\nimport Routes from './routes'\nimport { Provider } from 'react-redux'\nimport store from './storage'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalTheme from 'utils/GlobalTheme'\nimport theme from 'utils/theme'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Header from 'components/Header'\nimport Footer from 'components/Footer'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalTheme />\n        <Router>\n          <Header />\n          <Routes />\n        </Router>\n        <Footer />\n      </ThemeProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}